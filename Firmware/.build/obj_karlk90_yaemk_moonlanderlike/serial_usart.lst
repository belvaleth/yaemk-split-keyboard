   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 2
  11              		.file	"serial_usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SlaveThread,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	SlaveThread:
  25              	.LVL0:
  26              	.LFB301:
  27              		.file 1 "platforms/chibios/drivers/serial_usart.c"
   1:platforms/chibios/drivers/serial_usart.c **** /* Copyright 2021 QMK
   2:platforms/chibios/drivers/serial_usart.c ****  *
   3:platforms/chibios/drivers/serial_usart.c ****  * This program is free software: you can redistribute it and/or modify
   4:platforms/chibios/drivers/serial_usart.c ****  * it under the terms of the GNU General Public License as published by
   5:platforms/chibios/drivers/serial_usart.c ****  * the Free Software Foundation, either version 3 of the License, or
   6:platforms/chibios/drivers/serial_usart.c ****  * (at your option) any later version.
   7:platforms/chibios/drivers/serial_usart.c ****  *
   8:platforms/chibios/drivers/serial_usart.c ****  * This program is distributed in the hope that it will be useful,
   9:platforms/chibios/drivers/serial_usart.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:platforms/chibios/drivers/serial_usart.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:platforms/chibios/drivers/serial_usart.c ****  * GNU General Public License for more details.
  12:platforms/chibios/drivers/serial_usart.c ****  *
  13:platforms/chibios/drivers/serial_usart.c ****  * You should have received a copy of the GNU General Public License
  14:platforms/chibios/drivers/serial_usart.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:platforms/chibios/drivers/serial_usart.c ****  */
  16:platforms/chibios/drivers/serial_usart.c **** 
  17:platforms/chibios/drivers/serial_usart.c **** #include "serial_usart.h"
  18:platforms/chibios/drivers/serial_usart.c **** 
  19:platforms/chibios/drivers/serial_usart.c **** #if defined(SERIAL_USART_CONFIG)
  20:platforms/chibios/drivers/serial_usart.c **** static SerialConfig serial_config = SERIAL_USART_CONFIG;
  21:platforms/chibios/drivers/serial_usart.c **** #else
  22:platforms/chibios/drivers/serial_usart.c **** static SerialConfig serial_config = {
  23:platforms/chibios/drivers/serial_usart.c ****     .speed = (SERIAL_USART_SPEED), /* speed - mandatory */
  24:platforms/chibios/drivers/serial_usart.c ****     .cr1   = (SERIAL_USART_CR1),
  25:platforms/chibios/drivers/serial_usart.c ****     .cr2   = (SERIAL_USART_CR2),
  26:platforms/chibios/drivers/serial_usart.c **** #    if !defined(SERIAL_USART_FULL_DUPLEX)
  27:platforms/chibios/drivers/serial_usart.c ****     .cr3   = ((SERIAL_USART_CR3) | USART_CR3_HDSEL) /* activate half-duplex mode */
  28:platforms/chibios/drivers/serial_usart.c **** #    else
  29:platforms/chibios/drivers/serial_usart.c ****     .cr3 = (SERIAL_USART_CR3)
  30:platforms/chibios/drivers/serial_usart.c **** #    endif
  31:platforms/chibios/drivers/serial_usart.c **** };
  32:platforms/chibios/drivers/serial_usart.c **** #endif
  33:platforms/chibios/drivers/serial_usart.c **** 
  34:platforms/chibios/drivers/serial_usart.c **** static SerialDriver* serial_driver = &SERIAL_USART_DRIVER;
  35:platforms/chibios/drivers/serial_usart.c **** 
  36:platforms/chibios/drivers/serial_usart.c **** static inline bool react_to_transactions(void);
  37:platforms/chibios/drivers/serial_usart.c **** static inline bool __attribute__((nonnull)) receive(uint8_t* destination, const size_t size);
  38:platforms/chibios/drivers/serial_usart.c **** static inline bool __attribute__((nonnull)) send(const uint8_t* source, const size_t size);
  39:platforms/chibios/drivers/serial_usart.c **** static inline int  initiate_transaction(uint8_t sstd_index);
  40:platforms/chibios/drivers/serial_usart.c **** static inline void usart_clear(void);
  41:platforms/chibios/drivers/serial_usart.c **** 
  42:platforms/chibios/drivers/serial_usart.c **** /**
  43:platforms/chibios/drivers/serial_usart.c ****  * @brief Clear the receive input queue.
  44:platforms/chibios/drivers/serial_usart.c ****  */
  45:platforms/chibios/drivers/serial_usart.c **** static inline void usart_clear(void) {
  46:platforms/chibios/drivers/serial_usart.c ****     osalSysLock();
  47:platforms/chibios/drivers/serial_usart.c ****     bool volatile queue_not_empty = !iqIsEmptyI(&serial_driver->iqueue);
  48:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
  49:platforms/chibios/drivers/serial_usart.c **** 
  50:platforms/chibios/drivers/serial_usart.c ****     while (queue_not_empty) {
  51:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
  52:platforms/chibios/drivers/serial_usart.c ****         /* Hard reset the input queue. */
  53:platforms/chibios/drivers/serial_usart.c ****         iqResetI(&serial_driver->iqueue);
  54:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
  55:platforms/chibios/drivers/serial_usart.c ****         /* Allow pending interrupts to preempt.
  56:platforms/chibios/drivers/serial_usart.c ****          * Do not merge the lock/unlock blocks into one
  57:platforms/chibios/drivers/serial_usart.c ****          * or the code will not work properly.
  58:platforms/chibios/drivers/serial_usart.c ****          * The empty read adds a tiny amount of delay. */
  59:platforms/chibios/drivers/serial_usart.c ****         (void)queue_not_empty;
  60:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
  61:platforms/chibios/drivers/serial_usart.c ****         queue_not_empty = !iqIsEmptyI(&serial_driver->iqueue);
  62:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
  63:platforms/chibios/drivers/serial_usart.c ****     }
  64:platforms/chibios/drivers/serial_usart.c **** }
  65:platforms/chibios/drivers/serial_usart.c **** 
  66:platforms/chibios/drivers/serial_usart.c **** /**
  67:platforms/chibios/drivers/serial_usart.c ****  * @brief Blocking send of buffer with timeout.
  68:platforms/chibios/drivers/serial_usart.c ****  *
  69:platforms/chibios/drivers/serial_usart.c ****  * @return true Send success.
  70:platforms/chibios/drivers/serial_usart.c ****  * @return false Send failed.
  71:platforms/chibios/drivers/serial_usart.c ****  */
  72:platforms/chibios/drivers/serial_usart.c **** static inline bool send(const uint8_t* source, const size_t size) {
  73:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdWriteTimeout(serial_driver, source, size, TIME_MS2I(SERIAL_USART_TIMEO
  74:platforms/chibios/drivers/serial_usart.c **** 
  75:platforms/chibios/drivers/serial_usart.c **** #if !defined(SERIAL_USART_FULL_DUPLEX)
  76:platforms/chibios/drivers/serial_usart.c ****     if (success) {
  77:platforms/chibios/drivers/serial_usart.c ****         /* Half duplex fills the input queue with the data we wrote - just throw it away.
  78:platforms/chibios/drivers/serial_usart.c ****            Under the right circumstances (e.g. bad cables paired with high baud rates)
  79:platforms/chibios/drivers/serial_usart.c ****            less bytes can be present in the input queue, therefore a timeout is needed. */
  80:platforms/chibios/drivers/serial_usart.c ****         uint8_t dump[size];
  81:platforms/chibios/drivers/serial_usart.c ****         return receive(dump, size);
  82:platforms/chibios/drivers/serial_usart.c ****     }
  83:platforms/chibios/drivers/serial_usart.c **** #endif
  84:platforms/chibios/drivers/serial_usart.c **** 
  85:platforms/chibios/drivers/serial_usart.c ****     return success;
  86:platforms/chibios/drivers/serial_usart.c **** }
  87:platforms/chibios/drivers/serial_usart.c **** 
  88:platforms/chibios/drivers/serial_usart.c **** /**
  89:platforms/chibios/drivers/serial_usart.c ****  * @brief  Blocking receive of size * bytes with timeout.
  90:platforms/chibios/drivers/serial_usart.c ****  *
  91:platforms/chibios/drivers/serial_usart.c ****  * @return true Receive success.
  92:platforms/chibios/drivers/serial_usart.c ****  * @return false Receive failed.
  93:platforms/chibios/drivers/serial_usart.c ****  */
  94:platforms/chibios/drivers/serial_usart.c **** static inline bool receive(uint8_t* destination, const size_t size) {
  95:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdReadTimeout(serial_driver, destination, size, TIME_MS2I(SERIAL_USART_T
  96:platforms/chibios/drivers/serial_usart.c ****     return success;
  97:platforms/chibios/drivers/serial_usart.c **** }
  98:platforms/chibios/drivers/serial_usart.c **** 
  99:platforms/chibios/drivers/serial_usart.c **** #if !defined(SERIAL_USART_FULL_DUPLEX)
 100:platforms/chibios/drivers/serial_usart.c **** 
 101:platforms/chibios/drivers/serial_usart.c **** /**
 102:platforms/chibios/drivers/serial_usart.c ****  * @brief Initiate pins for USART peripheral. Half-duplex configuration.
 103:platforms/chibios/drivers/serial_usart.c ****  */
 104:platforms/chibios/drivers/serial_usart.c **** __attribute__((weak)) void usart_init(void) {
 105:platforms/chibios/drivers/serial_usart.c **** #    if defined(MCU_STM32)
 106:platforms/chibios/drivers/serial_usart.c **** #        if defined(USE_GPIOV1)
 107:platforms/chibios/drivers/serial_usart.c ****     palSetLineMode(SERIAL_USART_TX_PIN, PAL_MODE_ALTERNATE_OPENDRAIN);
 108:platforms/chibios/drivers/serial_usart.c **** #        else
 109:platforms/chibios/drivers/serial_usart.c ****     palSetLineMode(SERIAL_USART_TX_PIN, PAL_MODE_ALTERNATE(SERIAL_USART_TX_PAL_MODE) | PAL_OUTPUT_T
 110:platforms/chibios/drivers/serial_usart.c **** #        endif
 111:platforms/chibios/drivers/serial_usart.c **** 
 112:platforms/chibios/drivers/serial_usart.c **** #        if defined(USART_REMAP)
 113:platforms/chibios/drivers/serial_usart.c ****     USART_REMAP;
 114:platforms/chibios/drivers/serial_usart.c **** #        endif
 115:platforms/chibios/drivers/serial_usart.c **** #    else
 116:platforms/chibios/drivers/serial_usart.c **** #        pragma message "usart_init: MCU Familiy not supported by default, please supply your own i
 117:platforms/chibios/drivers/serial_usart.c **** #    endif
 118:platforms/chibios/drivers/serial_usart.c **** }
 119:platforms/chibios/drivers/serial_usart.c **** 
 120:platforms/chibios/drivers/serial_usart.c **** #else
 121:platforms/chibios/drivers/serial_usart.c **** 
 122:platforms/chibios/drivers/serial_usart.c **** /**
 123:platforms/chibios/drivers/serial_usart.c ****  * @brief Initiate pins for USART peripheral. Full-duplex configuration.
 124:platforms/chibios/drivers/serial_usart.c ****  */
 125:platforms/chibios/drivers/serial_usart.c **** __attribute__((weak)) void usart_init(void) {
 126:platforms/chibios/drivers/serial_usart.c **** #    if defined(MCU_STM32)
 127:platforms/chibios/drivers/serial_usart.c **** #        if defined(USE_GPIOV1)
 128:platforms/chibios/drivers/serial_usart.c ****     palSetLineMode(SERIAL_USART_TX_PIN, PAL_MODE_ALTERNATE_PUSHPULL);
 129:platforms/chibios/drivers/serial_usart.c ****     palSetLineMode(SERIAL_USART_RX_PIN, PAL_MODE_INPUT);
 130:platforms/chibios/drivers/serial_usart.c **** #        else
 131:platforms/chibios/drivers/serial_usart.c ****     palSetLineMode(SERIAL_USART_TX_PIN, PAL_MODE_ALTERNATE(SERIAL_USART_TX_PAL_MODE) | PAL_OUTPUT_T
 132:platforms/chibios/drivers/serial_usart.c ****     palSetLineMode(SERIAL_USART_RX_PIN, PAL_MODE_ALTERNATE(SERIAL_USART_RX_PAL_MODE) | PAL_OUTPUT_T
 133:platforms/chibios/drivers/serial_usart.c **** #        endif
 134:platforms/chibios/drivers/serial_usart.c **** 
 135:platforms/chibios/drivers/serial_usart.c **** #        if defined(USART_REMAP)
 136:platforms/chibios/drivers/serial_usart.c ****     USART_REMAP;
 137:platforms/chibios/drivers/serial_usart.c **** #        endif
 138:platforms/chibios/drivers/serial_usart.c **** #    else
 139:platforms/chibios/drivers/serial_usart.c **** #        pragma message "usart_init: MCU Familiy not supported by default, please supply your own i
 140:platforms/chibios/drivers/serial_usart.c **** #    endif
 141:platforms/chibios/drivers/serial_usart.c **** }
 142:platforms/chibios/drivers/serial_usart.c **** 
 143:platforms/chibios/drivers/serial_usart.c **** #endif
 144:platforms/chibios/drivers/serial_usart.c **** 
 145:platforms/chibios/drivers/serial_usart.c **** /**
 146:platforms/chibios/drivers/serial_usart.c ****  * @brief Overridable master specific initializations.
 147:platforms/chibios/drivers/serial_usart.c ****  */
 148:platforms/chibios/drivers/serial_usart.c **** __attribute__((weak, nonnull)) void usart_master_init(SerialDriver** driver) {
 149:platforms/chibios/drivers/serial_usart.c ****     (void)driver;
 150:platforms/chibios/drivers/serial_usart.c ****     usart_init();
 151:platforms/chibios/drivers/serial_usart.c **** }
 152:platforms/chibios/drivers/serial_usart.c **** 
 153:platforms/chibios/drivers/serial_usart.c **** /**
 154:platforms/chibios/drivers/serial_usart.c ****  * @brief Overridable slave specific initializations.
 155:platforms/chibios/drivers/serial_usart.c ****  */
 156:platforms/chibios/drivers/serial_usart.c **** __attribute__((weak, nonnull)) void usart_slave_init(SerialDriver** driver) {
 157:platforms/chibios/drivers/serial_usart.c ****     (void)driver;
 158:platforms/chibios/drivers/serial_usart.c ****     usart_init();
 159:platforms/chibios/drivers/serial_usart.c **** }
 160:platforms/chibios/drivers/serial_usart.c **** 
 161:platforms/chibios/drivers/serial_usart.c **** /**
 162:platforms/chibios/drivers/serial_usart.c ****  * @brief This thread runs on the slave and responds to transactions initiated
 163:platforms/chibios/drivers/serial_usart.c ****  * by the master.
 164:platforms/chibios/drivers/serial_usart.c ****  */
 165:platforms/chibios/drivers/serial_usart.c **** static THD_WORKING_AREA(waSlaveThread, 1024);
 166:platforms/chibios/drivers/serial_usart.c **** static THD_FUNCTION(SlaveThread, arg) {
  28              		.loc 1 166 39 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 167:platforms/chibios/drivers/serial_usart.c ****     (void)arg;
  33              		.loc 1 167 5 view .LVU1
 168:platforms/chibios/drivers/serial_usart.c ****     chRegSetThreadName("usart_tx_rx");
  34              		.loc 1 168 5 view .LVU2
  35              	.LBB126:
  36              	.LBI126:
  37              		.file 2 "./lib/chibios/os/rt/include/chregistry.h"
   1:./lib/chibios/os/rt/include/chregistry.h **** /*
   2:./lib/chibios/os/rt/include/chregistry.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chregistry.h **** 
   4:./lib/chibios/os/rt/include/chregistry.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chregistry.h **** 
   6:./lib/chibios/os/rt/include/chregistry.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chregistry.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chregistry.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chregistry.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chregistry.h **** 
  11:./lib/chibios/os/rt/include/chregistry.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chregistry.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chregistry.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chregistry.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chregistry.h **** 
  16:./lib/chibios/os/rt/include/chregistry.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chregistry.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chregistry.h **** */
  19:./lib/chibios/os/rt/include/chregistry.h **** 
  20:./lib/chibios/os/rt/include/chregistry.h **** /**
  21:./lib/chibios/os/rt/include/chregistry.h ****  * @file    rt/include/chregistry.h
  22:./lib/chibios/os/rt/include/chregistry.h ****  * @brief   Threads registry macros and structures.
  23:./lib/chibios/os/rt/include/chregistry.h ****  *
  24:./lib/chibios/os/rt/include/chregistry.h ****  * @addtogroup registry
  25:./lib/chibios/os/rt/include/chregistry.h ****  * @{
  26:./lib/chibios/os/rt/include/chregistry.h ****  */
  27:./lib/chibios/os/rt/include/chregistry.h **** 
  28:./lib/chibios/os/rt/include/chregistry.h **** #ifndef CHREGISTRY_H
  29:./lib/chibios/os/rt/include/chregistry.h **** #define CHREGISTRY_H
  30:./lib/chibios/os/rt/include/chregistry.h **** 
  31:./lib/chibios/os/rt/include/chregistry.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
  32:./lib/chibios/os/rt/include/chregistry.h **** 
  33:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chregistry.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chregistry.h **** 
  37:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chregistry.h **** /* Module pre-compile time settings.                                         */
  39:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chregistry.h **** 
  41:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chregistry.h **** /* Derived constants and error checks.                                       */
  43:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  44:./lib/chibios/os/rt/include/chregistry.h **** 
  45:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  46:./lib/chibios/os/rt/include/chregistry.h **** /* Module data structures and types.                                         */
  47:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chregistry.h **** 
  49:./lib/chibios/os/rt/include/chregistry.h **** /**
  50:./lib/chibios/os/rt/include/chregistry.h ****  * @brief   ChibiOS/RT memory signature record.
  51:./lib/chibios/os/rt/include/chregistry.h ****  */
  52:./lib/chibios/os/rt/include/chregistry.h **** typedef struct {
  53:./lib/chibios/os/rt/include/chregistry.h ****   char      identifier[4];          /**< @brief Always set to "main".       */
  54:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   zero;                   /**< @brief Must be zero.               */
  55:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   size;                   /**< @brief Size of this structure.     */
  56:./lib/chibios/os/rt/include/chregistry.h ****   uint16_t  version;                /**< @brief Encoded ChibiOS/RT version. */
  57:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   ptrsize;                /**< @brief Size of a pointer.          */
  58:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   timesize;               /**< @brief Size of a @p systime_t.     */
  59:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   threadsize;             /**< @brief Size of a @p thread_t.      */
  60:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_prio;               /**< @brief Offset of @p prio field.    */
  61:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_ctx;                /**< @brief Offset of @p ctx field.     */
  62:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_newer;              /**< @brief Offset of @p newer field.   */
  63:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_older;              /**< @brief Offset of @p older field.   */
  64:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_name;               /**< @brief Offset of @p name field.    */
  65:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_stklimit;           /**< @brief Offset of @p stklimit field.*/
  66:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_state;              /**< @brief Offset of @p state field.   */
  67:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_flags;              /**< @brief Offset of @p flags field.   */
  68:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_refs;               /**< @brief Offset of @p refs field.    */
  69:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_preempt;            /**< @brief Offset of @p preempt field. */
  70:./lib/chibios/os/rt/include/chregistry.h ****   uint8_t   off_time;               /**< @brief Offset of @p time field.    */
  71:./lib/chibios/os/rt/include/chregistry.h **** } chdebug_t;
  72:./lib/chibios/os/rt/include/chregistry.h **** 
  73:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  74:./lib/chibios/os/rt/include/chregistry.h **** /* Module macros.                                                            */
  75:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
  76:./lib/chibios/os/rt/include/chregistry.h **** 
  77:./lib/chibios/os/rt/include/chregistry.h **** /**
  78:./lib/chibios/os/rt/include/chregistry.h ****  * @brief   Removes a thread from the registry list.
  79:./lib/chibios/os/rt/include/chregistry.h ****  * @note    This macro is not meant for use in application code.
  80:./lib/chibios/os/rt/include/chregistry.h ****  *
  81:./lib/chibios/os/rt/include/chregistry.h ****  * @param[in] tp        thread to remove from the registry
  82:./lib/chibios/os/rt/include/chregistry.h ****  */
  83:./lib/chibios/os/rt/include/chregistry.h **** #define REG_REMOVE(tp) {                                                    \
  84:./lib/chibios/os/rt/include/chregistry.h ****   (tp)->older->newer = (tp)->newer;                                         \
  85:./lib/chibios/os/rt/include/chregistry.h ****   (tp)->newer->older = (tp)->older;                                         \
  86:./lib/chibios/os/rt/include/chregistry.h **** }
  87:./lib/chibios/os/rt/include/chregistry.h **** 
  88:./lib/chibios/os/rt/include/chregistry.h **** /**
  89:./lib/chibios/os/rt/include/chregistry.h ****  * @brief   Adds a thread to the registry list.
  90:./lib/chibios/os/rt/include/chregistry.h ****  * @note    This macro is not meant for use in application code.
  91:./lib/chibios/os/rt/include/chregistry.h ****  *
  92:./lib/chibios/os/rt/include/chregistry.h ****  * @param[in] tp        thread to add to the registry
  93:./lib/chibios/os/rt/include/chregistry.h ****  */
  94:./lib/chibios/os/rt/include/chregistry.h **** #define REG_INSERT(tp) {                                                    \
  95:./lib/chibios/os/rt/include/chregistry.h ****   (tp)->newer = (thread_t *)&ch.rlist;                                      \
  96:./lib/chibios/os/rt/include/chregistry.h ****   (tp)->older = ch.rlist.older;                                             \
  97:./lib/chibios/os/rt/include/chregistry.h ****   (tp)->older->newer = (tp);                                                \
  98:./lib/chibios/os/rt/include/chregistry.h ****   ch.rlist.older = (tp);                                                    \
  99:./lib/chibios/os/rt/include/chregistry.h **** }
 100:./lib/chibios/os/rt/include/chregistry.h **** 
 101:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
 102:./lib/chibios/os/rt/include/chregistry.h **** /* External declarations.                                                    */
 103:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
 104:./lib/chibios/os/rt/include/chregistry.h **** 
 105:./lib/chibios/os/rt/include/chregistry.h **** #ifdef __cplusplus
 106:./lib/chibios/os/rt/include/chregistry.h **** extern "C" {
 107:./lib/chibios/os/rt/include/chregistry.h **** #endif
 108:./lib/chibios/os/rt/include/chregistry.h ****   extern ROMCONST chdebug_t ch_debug;
 109:./lib/chibios/os/rt/include/chregistry.h ****   thread_t *chRegFirstThread(void);
 110:./lib/chibios/os/rt/include/chregistry.h ****   thread_t *chRegNextThread(thread_t *tp);
 111:./lib/chibios/os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByName(const char *name);
 112:./lib/chibios/os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByPointer(thread_t *tp);
 113:./lib/chibios/os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByWorkingArea(stkalign_t *wa);
 114:./lib/chibios/os/rt/include/chregistry.h **** #ifdef __cplusplus
 115:./lib/chibios/os/rt/include/chregistry.h **** }
 116:./lib/chibios/os/rt/include/chregistry.h **** #endif
 117:./lib/chibios/os/rt/include/chregistry.h **** 
 118:./lib/chibios/os/rt/include/chregistry.h **** #endif /* CH_CFG_USE_REGISTRY == TRUE */
 119:./lib/chibios/os/rt/include/chregistry.h **** 
 120:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
 121:./lib/chibios/os/rt/include/chregistry.h **** /* Module inline functions.                                                  */
 122:./lib/chibios/os/rt/include/chregistry.h **** /*===========================================================================*/
 123:./lib/chibios/os/rt/include/chregistry.h **** 
 124:./lib/chibios/os/rt/include/chregistry.h **** /**
 125:./lib/chibios/os/rt/include/chregistry.h ****  * @brief   Sets the current thread name.
 126:./lib/chibios/os/rt/include/chregistry.h ****  * @pre     This function only stores the pointer to the name if the option
 127:./lib/chibios/os/rt/include/chregistry.h ****  *          @p CH_CFG_USE_REGISTRY is enabled else no action is performed.
 128:./lib/chibios/os/rt/include/chregistry.h ****  *
 129:./lib/chibios/os/rt/include/chregistry.h ****  * @param[in] name      thread name as a zero terminated string
 130:./lib/chibios/os/rt/include/chregistry.h ****  *
 131:./lib/chibios/os/rt/include/chregistry.h ****  * @api
 132:./lib/chibios/os/rt/include/chregistry.h ****  */
 133:./lib/chibios/os/rt/include/chregistry.h **** static inline void chRegSetThreadName(const char *name) {
  38              		.loc 2 133 20 view .LVU3
  39              	.LBB127:
 134:./lib/chibios/os/rt/include/chregistry.h **** 
 135:./lib/chibios/os/rt/include/chregistry.h **** #if CH_CFG_USE_REGISTRY == TRUE
 136:./lib/chibios/os/rt/include/chregistry.h ****   ch.rlist.current->name = name;
 137:./lib/chibios/os/rt/include/chregistry.h **** #else
 138:./lib/chibios/os/rt/include/chregistry.h ****   (void)name;
  40              		.loc 2 138 3 view .LVU4
  41              	.LBE127:
  42              	.LBE126:
 166:platforms/chibios/drivers/serial_usart.c ****     (void)arg;
  43              		.loc 1 166 39 is_stmt 0 view .LVU5
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 444C     		ldr	r4, .L31
  49 0004 444E     		ldr	r6, .L31+4
  50 0006 454F     		ldr	r7, .L31+8
  51 0008 82B0     		sub	sp, sp, #8
  52              		.cfi_def_cfa_offset 16
  53              	.LVL1:
  54              	.L8:
 169:platforms/chibios/drivers/serial_usart.c **** 
 170:platforms/chibios/drivers/serial_usart.c ****     while (true) {
  55              		.loc 1 170 5 is_stmt 1 view .LVU6
 171:platforms/chibios/drivers/serial_usart.c ****         if (!react_to_transactions()) {
  56              		.loc 1 171 9 view .LVU7
  57              	.LBB128:
  58              	.LBI128:
 172:platforms/chibios/drivers/serial_usart.c ****             /* Clear the receive queue, to start with a clean slate.
 173:platforms/chibios/drivers/serial_usart.c ****              * Parts of failed transactions or spurious bytes could still be in it. */
 174:platforms/chibios/drivers/serial_usart.c ****             usart_clear();
 175:platforms/chibios/drivers/serial_usart.c ****         }
 176:platforms/chibios/drivers/serial_usart.c ****     }
 177:platforms/chibios/drivers/serial_usart.c **** }
 178:platforms/chibios/drivers/serial_usart.c **** 
 179:platforms/chibios/drivers/serial_usart.c **** /**
 180:platforms/chibios/drivers/serial_usart.c ****  * @brief Slave specific initializations.
 181:platforms/chibios/drivers/serial_usart.c ****  */
 182:platforms/chibios/drivers/serial_usart.c **** void soft_serial_target_init(void) {
 183:platforms/chibios/drivers/serial_usart.c ****     usart_slave_init(&serial_driver);
 184:platforms/chibios/drivers/serial_usart.c **** 
 185:platforms/chibios/drivers/serial_usart.c ****     sdStart(serial_driver, &serial_config);
 186:platforms/chibios/drivers/serial_usart.c **** 
 187:platforms/chibios/drivers/serial_usart.c ****     /* Start transport thread. */
 188:platforms/chibios/drivers/serial_usart.c ****     chThdCreateStatic(waSlaveThread, sizeof(waSlaveThread), HIGHPRIO, SlaveThread, NULL);
 189:platforms/chibios/drivers/serial_usart.c **** }
 190:platforms/chibios/drivers/serial_usart.c **** 
 191:platforms/chibios/drivers/serial_usart.c **** /**
 192:platforms/chibios/drivers/serial_usart.c ****  * @brief React to transactions started by the master.
 193:platforms/chibios/drivers/serial_usart.c ****  */
 194:platforms/chibios/drivers/serial_usart.c **** static inline bool react_to_transactions(void) {
  59              		.loc 1 194 20 view .LVU8
  60              	.LBB129:
 195:platforms/chibios/drivers/serial_usart.c ****     /* Wait until there is a transaction for us. */
 196:platforms/chibios/drivers/serial_usart.c ****     uint8_t sstd_index = (uint8_t)sdGet(serial_driver);
  61              		.loc 1 196 5 view .LVU9
  62              		.loc 1 196 35 is_stmt 0 view .LVU10
  63 000a 2068     		ldr	r0, [r4]
  64 000c 4FF0FF31 		mov	r1, #-1
  65 0010 0C30     		adds	r0, r0, #12
  66 0012 FFF7FEFF 		bl	iqGetTimeout
  67              	.LVL2:
  68              		.loc 1 196 26 view .LVU11
  69 0016 C5B2     		uxtb	r5, r0
 197:platforms/chibios/drivers/serial_usart.c **** 
 198:platforms/chibios/drivers/serial_usart.c ****     /* Sanity check that we are actually responding to a valid transaction. */
 199:platforms/chibios/drivers/serial_usart.c ****     if (sstd_index >= NUM_TOTAL_TRANSACTIONS) {
  70              		.loc 1 199 5 is_stmt 1 view .LVU12
  71              		.loc 1 199 8 is_stmt 0 view .LVU13
  72 0018 082D     		cmp	r5, #8
  73 001a 2BD9     		bls	.L28
  74              	.L3:
  75              	.LBE129:
  76              	.LBE128:
 174:platforms/chibios/drivers/serial_usart.c ****         }
  77              		.loc 1 174 13 is_stmt 1 view .LVU14
  78              	.LBB145:
  79              	.LBI145:
  45:platforms/chibios/drivers/serial_usart.c ****     osalSysLock();
  80              		.loc 1 45 20 view .LVU15
  81              	.LBB146:
  46:platforms/chibios/drivers/serial_usart.c ****     bool volatile queue_not_empty = !iqIsEmptyI(&serial_driver->iqueue);
  82              		.loc 1 46 5 view .LVU16
  83              	.LBB147:
  84              	.LBI147:
  85              		.file 3 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32) &&             \
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     (OSAL_ST_RESOLUTION != 64)
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16, 32 or 64"
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of time conversion variable.
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type must have double width than other time types, it is
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          only used internally for conversions.
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint64_t time_conv_t;
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to time interval.
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to time interval.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to time interval.
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to seconds.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to seconds.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next second boundary.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of seconds.
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2S(interval) TIME_I2S(interval)
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to milliseconds.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to milliseconds.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next millisecond boundary.
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of milliseconds.
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2MS(interval) TIME_I2MS(interval)
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Time interval to microseconds.
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from system ticks number to microseconds.
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded up to the next microsecond boundary.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Use of this macro for large values is not secure because
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          integer overflows, make sure your value can be correctly
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          converted.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval in ticks
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of microseconds.
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_I2US(interval) TIME_I2US(interval)
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
  86              		.loc 3 573 20 view .LVU17
  87              	.LBE147:
  88              	.LBE146:
  89              	.LBE145:
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
  90              		.loc 3 575 3 view .LVU18
  91              	.LBB237:
  92              	.LBB219:
  93              	.LBB155:
  94              	.LBB148:
  95              	.LBI148:
  96              		.file 4 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  * @{
  66:./lib/chibios/os/rt/include/chsys.h ****  */
  67:./lib/chibios/os/rt/include/chsys.h **** /**
  68:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  69:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  70:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  71:./lib/chibios/os/rt/include/chsys.h ****  *
  72:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  73:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  74:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  75:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  76:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  77:./lib/chibios/os/rt/include/chsys.h ****  */
  78:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  79:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  80:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  81:./lib/chibios/os/rt/include/chsys.h **** #else
  82:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  83:./lib/chibios/os/rt/include/chsys.h **** #endif
  84:./lib/chibios/os/rt/include/chsys.h **** 
  85:./lib/chibios/os/rt/include/chsys.h **** /**
  86:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  87:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  88:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  89:./lib/chibios/os/rt/include/chsys.h ****  *
  90:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  91:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  92:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  93:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  94:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  95:./lib/chibios/os/rt/include/chsys.h ****  */
  96:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  97:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  98:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  99:./lib/chibios/os/rt/include/chsys.h **** #else
 100:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 101:./lib/chibios/os/rt/include/chsys.h **** #endif
 102:./lib/chibios/os/rt/include/chsys.h **** 
 103:./lib/chibios/os/rt/include/chsys.h **** /**
 104:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 106:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 107:./lib/chibios/os/rt/include/chsys.h ****  *
 108:./lib/chibios/os/rt/include/chsys.h ****  * @special
 109:./lib/chibios/os/rt/include/chsys.h ****  */
 110:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 111:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 112:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 113:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 114:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 115:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 116:./lib/chibios/os/rt/include/chsys.h **** 
 117:./lib/chibios/os/rt/include/chsys.h **** /**
 118:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 120:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 121:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 122:./lib/chibios/os/rt/include/chsys.h ****  *
 123:./lib/chibios/os/rt/include/chsys.h ****  * @special
 124:./lib/chibios/os/rt/include/chsys.h ****  */
 125:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 127:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 129:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 130:./lib/chibios/os/rt/include/chsys.h **** 
 131:./lib/chibios/os/rt/include/chsys.h **** /**
 132:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 133:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 134:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 135:./lib/chibios/os/rt/include/chsys.h ****  *
 136:./lib/chibios/os/rt/include/chsys.h ****  * @special
 137:./lib/chibios/os/rt/include/chsys.h ****  */
 138:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 139:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 140:./lib/chibios/os/rt/include/chsys.h **** 
 141:./lib/chibios/os/rt/include/chsys.h **** /**
 142:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 143:./lib/chibios/os/rt/include/chsys.h ****  * @{
 144:./lib/chibios/os/rt/include/chsys.h ****  */
 145:./lib/chibios/os/rt/include/chsys.h **** /**
 146:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 148:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 149:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 150:./lib/chibios/os/rt/include/chsys.h ****  *
 151:./lib/chibios/os/rt/include/chsys.h ****  * @special
 152:./lib/chibios/os/rt/include/chsys.h ****  */
 153:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 154:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 155:./lib/chibios/os/rt/include/chsys.h **** 
 156:./lib/chibios/os/rt/include/chsys.h **** /**
 157:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 158:./lib/chibios/os/rt/include/chsys.h ****  * @{
 159:./lib/chibios/os/rt/include/chsys.h ****  */
 160:./lib/chibios/os/rt/include/chsys.h **** /**
 161:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 162:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 163:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 164:./lib/chibios/os/rt/include/chsys.h ****  *
 165:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 166:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 167:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 168:./lib/chibios/os/rt/include/chsys.h ****  *
 169:./lib/chibios/os/rt/include/chsys.h ****  * @api
 170:./lib/chibios/os/rt/include/chsys.h ****  */
 171:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 172:./lib/chibios/os/rt/include/chsys.h **** 
 173:./lib/chibios/os/rt/include/chsys.h **** /**
 174:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 176:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 177:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 178:./lib/chibios/os/rt/include/chsys.h ****  *
 179:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 180:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 181:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 182:./lib/chibios/os/rt/include/chsys.h ****  *
 183:./lib/chibios/os/rt/include/chsys.h ****  * @api
 184:./lib/chibios/os/rt/include/chsys.h ****  */
 185:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 186:./lib/chibios/os/rt/include/chsys.h **** 
 187:./lib/chibios/os/rt/include/chsys.h **** /**
 188:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 190:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 191:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 192:./lib/chibios/os/rt/include/chsys.h ****  *
 193:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 194:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 195:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 196:./lib/chibios/os/rt/include/chsys.h ****  *
 197:./lib/chibios/os/rt/include/chsys.h ****  * @api
 198:./lib/chibios/os/rt/include/chsys.h ****  */
 199:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 200:./lib/chibios/os/rt/include/chsys.h **** 
 201:./lib/chibios/os/rt/include/chsys.h **** /**
 202:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 204:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 205:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 206:./lib/chibios/os/rt/include/chsys.h ****  *
 207:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 208:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 209:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 210:./lib/chibios/os/rt/include/chsys.h ****  *
 211:./lib/chibios/os/rt/include/chsys.h ****  * @api
 212:./lib/chibios/os/rt/include/chsys.h ****  */
 213:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 214:./lib/chibios/os/rt/include/chsys.h **** 
 215:./lib/chibios/os/rt/include/chsys.h **** /**
 216:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 218:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 219:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 220:./lib/chibios/os/rt/include/chsys.h ****  *
 221:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 222:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 223:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 224:./lib/chibios/os/rt/include/chsys.h ****  *
 225:./lib/chibios/os/rt/include/chsys.h ****  * @api
 226:./lib/chibios/os/rt/include/chsys.h ****  */
 227:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 228:./lib/chibios/os/rt/include/chsys.h **** 
 229:./lib/chibios/os/rt/include/chsys.h **** /**
 230:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 232:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 233:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 234:./lib/chibios/os/rt/include/chsys.h ****  *
 235:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 236:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 237:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 238:./lib/chibios/os/rt/include/chsys.h ****  *
 239:./lib/chibios/os/rt/include/chsys.h ****  * @api
 240:./lib/chibios/os/rt/include/chsys.h ****  */
 241:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 242:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 243:./lib/chibios/os/rt/include/chsys.h **** 
 244:./lib/chibios/os/rt/include/chsys.h **** /**
 245:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 246:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 247:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 248:./lib/chibios/os/rt/include/chsys.h ****  *
 249:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 250:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 251:./lib/chibios/os/rt/include/chsys.h ****  *
 252:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 253:./lib/chibios/os/rt/include/chsys.h ****  */
 254:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 255:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 256:./lib/chibios/os/rt/include/chsys.h **** #endif
 257:./lib/chibios/os/rt/include/chsys.h **** 
 258:./lib/chibios/os/rt/include/chsys.h **** /**
 259:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 260:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 261:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 262:./lib/chibios/os/rt/include/chsys.h ****  *
 263:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 264:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 265:./lib/chibios/os/rt/include/chsys.h ****  *
 266:./lib/chibios/os/rt/include/chsys.h ****  * @special
 267:./lib/chibios/os/rt/include/chsys.h ****  */
 268:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 269:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 270:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 271:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 272:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 273:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 274:./lib/chibios/os/rt/include/chsys.h **** }
 275:./lib/chibios/os/rt/include/chsys.h **** 
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 278:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 279:./lib/chibios/os/rt/include/chsys.h **** 
 280:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 281:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 282:./lib/chibios/os/rt/include/chsys.h **** #endif
 283:./lib/chibios/os/rt/include/chsys.h **** 
 284:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 285:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 286:./lib/chibios/os/rt/include/chsys.h **** #endif
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 290:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 291:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 292:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 293:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 294:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 295:./lib/chibios/os/rt/include/chsys.h **** #endif
 296:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 297:./lib/chibios/os/rt/include/chsys.h **** }
 298:./lib/chibios/os/rt/include/chsys.h **** #endif
 299:./lib/chibios/os/rt/include/chsys.h **** 
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 302:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 303:./lib/chibios/os/rt/include/chsys.h **** 
 304:./lib/chibios/os/rt/include/chsys.h **** /**
 305:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 307:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 308:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 309:./lib/chibios/os/rt/include/chsys.h ****  *
 310:./lib/chibios/os/rt/include/chsys.h ****  * @special
 311:./lib/chibios/os/rt/include/chsys.h ****  */
 312:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 313:./lib/chibios/os/rt/include/chsys.h **** 
 314:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 315:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 316:./lib/chibios/os/rt/include/chsys.h **** }
 317:./lib/chibios/os/rt/include/chsys.h **** 
 318:./lib/chibios/os/rt/include/chsys.h **** /**
 319:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 320:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 321:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 322:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 323:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 324:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 325:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 326:./lib/chibios/os/rt/include/chsys.h ****  *
 327:./lib/chibios/os/rt/include/chsys.h ****  * @special
 328:./lib/chibios/os/rt/include/chsys.h ****  */
 329:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 330:./lib/chibios/os/rt/include/chsys.h **** 
 331:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 332:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 333:./lib/chibios/os/rt/include/chsys.h **** }
 334:./lib/chibios/os/rt/include/chsys.h **** 
 335:./lib/chibios/os/rt/include/chsys.h **** /**
 336:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 338:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 339:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 340:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 341:./lib/chibios/os/rt/include/chsys.h ****  *
 342:./lib/chibios/os/rt/include/chsys.h ****  * @special
 343:./lib/chibios/os/rt/include/chsys.h ****  */
 344:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 345:./lib/chibios/os/rt/include/chsys.h **** 
 346:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 347:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 348:./lib/chibios/os/rt/include/chsys.h **** }
 349:./lib/chibios/os/rt/include/chsys.h **** 
 350:./lib/chibios/os/rt/include/chsys.h **** /**
 351:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 352:./lib/chibios/os/rt/include/chsys.h ****  *
 353:./lib/chibios/os/rt/include/chsys.h ****  * @special
 354:./lib/chibios/os/rt/include/chsys.h ****  */
 355:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
  97              		.loc 4 355 20 view .LVU19
  98              	.LBE148:
  99              	.LBE155:
 100              	.LBE219:
 101              	.LBE237:
 356:./lib/chibios/os/rt/include/chsys.h **** 
 357:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 102              		.loc 4 357 3 view .LVU20
 103              	.LBB238:
 104              	.LBB220:
 105              	.LBB156:
 106              	.LBB153:
 107              	.LBB149:
 108              	.LBI149:
 109              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 110              		.loc 5 669 27 view .LVU21
 111              	.LBE149:
 112              	.LBE153:
 113              	.LBE156:
 114              	.LBE220:
 115              	.LBE238:
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 116              		.loc 5 677 3 view .LVU22
 117              	.LVL3:
 118              	.LBB239:
 119              	.LBB221:
 120              	.LBB157:
 121              	.LBB154:
 122              	.LBB152:
 123              	.LBB150:
 124              	.LBI150:
 125              		.file 6 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 126              		.loc 6 491 27 view .LVU23
 127              	.LBB151:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 128              		.loc 6 493 3 view .LVU24
 129 001c 4FF02008 		mov	r8, #32
 130              		.syntax unified
 131              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 132 0020 88F31188 		MSR basepri, r8
 133              	@ 0 "" 2
 134              	.LVL4:
 135              		.loc 6 493 3 is_stmt 0 view .LVU25
 136              		.thumb
 137              		.syntax unified
 138              	.LBE151:
 139              	.LBE150:
 140              	.LBE152:
 141              	.LBE154:
 142              	.LBE157:
 143              	.LBE221:
 144              	.LBE239:
 358:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 145              		.loc 4 358 34 is_stmt 1 view .LVU26
 359:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 146              		.loc 4 359 20 view .LVU27
 147              	.LBB240:
 148              	.LBB222:
  47:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
 149              		.loc 1 47 5 view .LVU28
  47:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
 150              		.loc 1 47 38 is_stmt 0 view .LVU29
 151 0024 2368     		ldr	r3, [r4]
 152 0026 5B69     		ldr	r3, [r3, #20]
 153              	.LBB158:
 154              	.LBB159:
 155              	.LBB160:
 156              	.LBB161:
 157              	.LBB162:
 158              	.LBB163:
 159              		.loc 6 493 3 view .LVU30
 160 0028 0025     		movs	r5, #0
 161              	.LBE163:
 162              	.LBE162:
 163              	.LBE161:
 164              	.LBE160:
 165              	.LBE159:
 166              	.LBE158:
  47:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
 167              		.loc 1 47 37 view .LVU31
 168 002a 5B1B     		subs	r3, r3, r5
 169 002c 18BF     		it	ne
 170 002e 0123     		movne	r3, #1
  47:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
 171              		.loc 1 47 19 view .LVU32
 172 0030 8DF80730 		strb	r3, [sp, #7]
  48:platforms/chibios/drivers/serial_usart.c **** 
 173              		.loc 1 48 5 is_stmt 1 view .LVU33
 174              	.LBB172:
 175              	.LBI158:
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 176              		.loc 3 584 20 view .LVU34
 177              	.LBE172:
 178              	.LBE222:
 179              	.LBE240:
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 180              		.loc 3 586 3 view .LVU35
 181              	.LBB241:
 182              	.LBB223:
 183              	.LBB173:
 184              	.LBB170:
 185              	.LBI159:
 360:./lib/chibios/os/rt/include/chsys.h **** }
 361:./lib/chibios/os/rt/include/chsys.h **** 
 362:./lib/chibios/os/rt/include/chsys.h **** /**
 363:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 364:./lib/chibios/os/rt/include/chsys.h ****  *
 365:./lib/chibios/os/rt/include/chsys.h ****  * @special
 366:./lib/chibios/os/rt/include/chsys.h ****  */
 367:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 186              		.loc 4 367 20 view .LVU36
 187              	.LBB168:
 368:./lib/chibios/os/rt/include/chsys.h **** 
 369:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 188              		.loc 4 369 22 view .LVU37
 370:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 189              		.loc 4 370 33 view .LVU38
 371:./lib/chibios/os/rt/include/chsys.h **** 
 372:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 373:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 374:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 375:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 376:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.pqueue.next == &ch.rlist.pqueue) ||
 190              		.loc 4 376 3 view .LVU39
 191              		.loc 4 376 3 view .LVU40
 192              		.loc 4 376 3 view .LVU41
 377:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 378:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 379:./lib/chibios/os/rt/include/chsys.h **** 
 380:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 193              		.loc 4 380 3 view .LVU42
 194              	.LBB166:
 195              	.LBI161:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 196              		.loc 5 693 27 view .LVU43
 197              	.LBE166:
 198              	.LBE168:
 199              	.LBE170:
 200              	.LBE173:
 201              	.LBE223:
 202              	.LBE241:
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 203              		.loc 5 696 3 view .LVU44
 204              	.LVL5:
 205              	.LBB242:
 206              	.LBB224:
 207              	.LBB174:
 208              	.LBB171:
 209              	.LBB169:
 210              	.LBB167:
 211              	.LBB165:
 212              	.LBI162:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 213              		.loc 6 491 27 view .LVU45
 214              	.LBB164:
 215              		.loc 6 493 3 view .LVU46
 216              		.syntax unified
 217              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 218 0034 85F31188 		MSR basepri, r5
 219              	@ 0 "" 2
 220              	.LVL6:
 221              		.loc 6 493 3 is_stmt 0 view .LVU47
 222              		.thumb
 223              		.syntax unified
 224              	.LBE164:
 225              	.LBE165:
 226              	.LBE167:
 227              	.LBE169:
 228              	.LBE171:
 229              	.LBE174:
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 230              		.loc 1 50 11 is_stmt 1 view .LVU48
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 231              		.loc 1 50 12 is_stmt 0 view .LVU49
 232 0038 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 233              		.loc 1 50 11 view .LVU50
 234 003c 002B     		cmp	r3, #0
 235 003e E4D0     		beq	.L8
 236              	.L10:
  51:platforms/chibios/drivers/serial_usart.c ****         /* Hard reset the input queue. */
 237              		.loc 1 51 9 is_stmt 1 view .LVU51
 238              	.LBB175:
 239              	.LBI175:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 240              		.loc 3 573 20 view .LVU52
 241              	.LBE175:
 242              	.LBE224:
 243              	.LBE242:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 244              		.loc 3 575 3 view .LVU53
 245              	.LBB243:
 246              	.LBB225:
 247              	.LBB183:
 248              	.LBB176:
 249              	.LBI176:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 250              		.loc 4 355 20 view .LVU54
 251              	.LBE176:
 252              	.LBE183:
 253              	.LBE225:
 254              	.LBE243:
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 255              		.loc 4 357 3 view .LVU55
 256              	.LBB244:
 257              	.LBB226:
 258              	.LBB184:
 259              	.LBB181:
 260              	.LBB177:
 261              	.LBI177:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 262              		.loc 5 669 27 view .LVU56
 263              	.LBE177:
 264              	.LBE181:
 265              	.LBE184:
 266              	.LBE226:
 267              	.LBE244:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 268              		.loc 5 677 3 view .LVU57
 269              	.LVL7:
 270              	.LBB245:
 271              	.LBB227:
 272              	.LBB185:
 273              	.LBB182:
 274              	.LBB180:
 275              	.LBB178:
 276              	.LBI178:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 277              		.loc 6 491 27 view .LVU58
 278              	.LBB179:
 279              		.loc 6 493 3 view .LVU59
 280              		.syntax unified
 281              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 282 0040 88F31188 		MSR basepri, r8
 283              	@ 0 "" 2
 284              	.LVL8:
 285              		.loc 6 493 3 is_stmt 0 view .LVU60
 286              		.thumb
 287              		.syntax unified
 288              	.LBE179:
 289              	.LBE178:
 290              	.LBE180:
 291              	.LBE182:
 292              	.LBE185:
 293              	.LBE227:
 294              	.LBE245:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 295              		.loc 4 358 34 is_stmt 1 view .LVU61
 359:./lib/chibios/os/rt/include/chsys.h **** }
 296              		.loc 4 359 20 view .LVU62
 297              	.LBB246:
 298              	.LBB228:
  53:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 299              		.loc 1 53 9 view .LVU63
 300 0044 2068     		ldr	r0, [r4]
 301 0046 0C30     		adds	r0, r0, #12
 302 0048 FFF7FEFF 		bl	iqResetI
 303              	.LVL9:
  54:platforms/chibios/drivers/serial_usart.c ****         /* Allow pending interrupts to preempt.
 304              		.loc 1 54 9 view .LVU64
 305              	.LBB186:
 306              	.LBI186:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 307              		.loc 3 584 20 view .LVU65
 308              	.LBE186:
 309              	.LBE228:
 310              	.LBE246:
 311              		.loc 3 586 3 view .LVU66
 312              	.LBB247:
 313              	.LBB229:
 314              	.LBB195:
 315              	.LBB187:
 316              	.LBI187:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 317              		.loc 4 367 20 view .LVU67
 318              	.LBB188:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 319              		.loc 4 369 22 view .LVU68
 370:./lib/chibios/os/rt/include/chsys.h **** 
 320              		.loc 4 370 33 view .LVU69
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 321              		.loc 4 376 3 view .LVU70
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 322              		.loc 4 376 3 view .LVU71
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 323              		.loc 4 376 3 view .LVU72
 324              		.loc 4 380 3 view .LVU73
 325              	.LBB189:
 326              	.LBI189:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 327              		.loc 5 693 27 view .LVU74
 328              	.LBE189:
 329              	.LBE188:
 330              	.LBE187:
 331              	.LBE195:
 332              	.LBE229:
 333              	.LBE247:
 334              		.loc 5 696 3 view .LVU75
 335              	.LBB248:
 336              	.LBB230:
 337              	.LBB196:
 338              	.LBB194:
 339              	.LBB193:
 340              	.LBB192:
 341              	.LBB190:
 342              	.LBI190:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 343              		.loc 6 491 27 view .LVU76
 344              	.LBB191:
 345              		.loc 6 493 3 view .LVU77
 346              		.syntax unified
 347              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 348 004c 85F31188 		MSR basepri, r5
 349              	@ 0 "" 2
 350              	.LVL10:
 351              		.loc 6 493 3 is_stmt 0 view .LVU78
 352              		.thumb
 353              		.syntax unified
 354              	.LBE191:
 355              	.LBE190:
 356              	.LBE192:
 357              	.LBE193:
 358              	.LBE194:
 359              	.LBE196:
  59:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 360              		.loc 1 59 9 is_stmt 1 view .LVU79
 361 0050 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  60:platforms/chibios/drivers/serial_usart.c ****         queue_not_empty = !iqIsEmptyI(&serial_driver->iqueue);
 362              		.loc 1 60 9 view .LVU80
 363              	.LBB197:
 364              	.LBI197:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 365              		.loc 3 573 20 view .LVU81
 366              	.LBE197:
 367              	.LBE230:
 368              	.LBE248:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 369              		.loc 3 575 3 view .LVU82
 370              	.LBB249:
 371              	.LBB231:
 372              	.LBB205:
 373              	.LBB198:
 374              	.LBI198:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 375              		.loc 4 355 20 view .LVU83
 376              	.LBE198:
 377              	.LBE205:
 378              	.LBE231:
 379              	.LBE249:
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 380              		.loc 4 357 3 view .LVU84
 381              	.LBB250:
 382              	.LBB232:
 383              	.LBB206:
 384              	.LBB203:
 385              	.LBB199:
 386              	.LBI199:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 387              		.loc 5 669 27 view .LVU85
 388              	.LBE199:
 389              	.LBE203:
 390              	.LBE206:
 391              	.LBE232:
 392              	.LBE250:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 393              		.loc 5 677 3 view .LVU86
 394              	.LVL11:
 395              	.LBB251:
 396              	.LBB233:
 397              	.LBB207:
 398              	.LBB204:
 399              	.LBB202:
 400              	.LBB200:
 401              	.LBI200:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 402              		.loc 6 491 27 view .LVU87
 403              	.LBB201:
 404              		.loc 6 493 3 view .LVU88
 405              		.syntax unified
 406              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 407 0054 88F31188 		MSR basepri, r8
 408              	@ 0 "" 2
 409              	.LVL12:
 410              		.loc 6 493 3 is_stmt 0 view .LVU89
 411              		.thumb
 412              		.syntax unified
 413              	.LBE201:
 414              	.LBE200:
 415              	.LBE202:
 416              	.LBE204:
 417              	.LBE207:
 418              	.LBE233:
 419              	.LBE251:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 420              		.loc 4 358 34 is_stmt 1 view .LVU90
 359:./lib/chibios/os/rt/include/chsys.h **** }
 421              		.loc 4 359 20 view .LVU91
 422              	.LBB252:
 423              	.LBB234:
  61:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 424              		.loc 1 61 9 view .LVU92
  61:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 425              		.loc 1 61 28 is_stmt 0 view .LVU93
 426 0058 2368     		ldr	r3, [r4]
 427 005a 5B69     		ldr	r3, [r3, #20]
  61:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 428              		.loc 1 61 27 view .LVU94
 429 005c 003B     		subs	r3, r3, #0
 430 005e 18BF     		it	ne
 431 0060 0123     		movne	r3, #1
  61:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 432              		.loc 1 61 25 view .LVU95
 433 0062 8DF80730 		strb	r3, [sp, #7]
  62:platforms/chibios/drivers/serial_usart.c ****     }
 434              		.loc 1 62 9 is_stmt 1 view .LVU96
 435              	.LBB208:
 436              	.LBI208:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 437              		.loc 3 584 20 view .LVU97
 438              	.LBE208:
 439              	.LBE234:
 440              	.LBE252:
 441              		.loc 3 586 3 view .LVU98
 442              	.LBB253:
 443              	.LBB235:
 444              	.LBB217:
 445              	.LBB209:
 446              	.LBI209:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 447              		.loc 4 367 20 view .LVU99
 448              	.LBB210:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 449              		.loc 4 369 22 view .LVU100
 370:./lib/chibios/os/rt/include/chsys.h **** 
 450              		.loc 4 370 33 view .LVU101
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 451              		.loc 4 376 3 view .LVU102
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 452              		.loc 4 376 3 view .LVU103
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 453              		.loc 4 376 3 view .LVU104
 454              		.loc 4 380 3 view .LVU105
 455              	.LBB211:
 456              	.LBI211:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 457              		.loc 5 693 27 view .LVU106
 458              	.LBE211:
 459              	.LBE210:
 460              	.LBE209:
 461              	.LBE217:
 462              	.LBE235:
 463              	.LBE253:
 464              		.loc 5 696 3 view .LVU107
 465              	.LVL13:
 466              	.LBB254:
 467              	.LBB236:
 468              	.LBB218:
 469              	.LBB216:
 470              	.LBB215:
 471              	.LBB214:
 472              	.LBB212:
 473              	.LBI212:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 474              		.loc 6 491 27 view .LVU108
 475              	.LBB213:
 476              		.loc 6 493 3 view .LVU109
 477              		.syntax unified
 478              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 479 0066 85F31188 		MSR basepri, r5
 480              	@ 0 "" 2
 481              	.LVL14:
 482              		.loc 6 493 3 is_stmt 0 view .LVU110
 483              		.thumb
 484              		.syntax unified
 485              	.LBE213:
 486              	.LBE212:
 487              	.LBE214:
 488              	.LBE215:
 489              	.LBE216:
 490              	.LBE218:
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 491              		.loc 1 50 11 is_stmt 1 view .LVU111
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 492              		.loc 1 50 12 is_stmt 0 view .LVU112
 493 006a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 494              		.loc 1 50 11 view .LVU113
 495 006e 002B     		cmp	r3, #0
 496 0070 E6D1     		bne	.L10
 497 0072 CAE7     		b	.L8
 498              	.L28:
 499              	.LBE236:
 500              	.LBE254:
 501              	.LBB255:
 502              	.LBB144:
 200:platforms/chibios/drivers/serial_usart.c ****         return false;
 201:platforms/chibios/drivers/serial_usart.c ****     }
 202:platforms/chibios/drivers/serial_usart.c **** 
 203:platforms/chibios/drivers/serial_usart.c ****     split_transaction_desc_t* trans = &split_transaction_table[sstd_index];
 503              		.loc 1 203 5 is_stmt 1 view .LVU114
 504              	.LVL15:
 204:platforms/chibios/drivers/serial_usart.c **** 
 205:platforms/chibios/drivers/serial_usart.c ****     /* Send back the handshake which is XORed as a simple checksum,
 206:platforms/chibios/drivers/serial_usart.c ****      to signal that the slave is ready to receive possible transaction buffers  */
 207:platforms/chibios/drivers/serial_usart.c ****     sstd_index ^= HANDSHAKE_MAGIC;
 505              		.loc 1 207 5 view .LVU115
 506              	.LBB130:
 507              	.LBB131:
  73:platforms/chibios/drivers/serial_usart.c **** 
 508              		.loc 1 73 28 is_stmt 0 view .LVU116
 509 0074 2068     		ldr	r0, [r4]
 510              	.LBE131:
 511              	.LBE130:
 512              		.loc 1 207 16 view .LVU117
 513 0076 85F0070C 		eor	ip, r5, #7
 514              	.LBB134:
 515              	.LBB132:
  73:platforms/chibios/drivers/serial_usart.c **** 
 516              		.loc 1 73 28 view .LVU118
 517 007a 3223     		movs	r3, #50
 518 007c 0122     		movs	r2, #1
 519 007e 0DF10601 		add	r1, sp, #6
 520 0082 3030     		adds	r0, r0, #48
 521              	.LBE132:
 522              	.LBE134:
 523              		.loc 1 207 16 view .LVU119
 524 0084 8DF806C0 		strb	ip, [sp, #6]
 208:platforms/chibios/drivers/serial_usart.c ****     if (!send(&sstd_index, sizeof(sstd_index))) {
 525              		.loc 1 208 5 is_stmt 1 view .LVU120
 526              	.LVL16:
 527              	.LBB135:
 528              	.LBI130:
  72:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdWriteTimeout(serial_driver, source, size, TIME_MS2I(SERIAL_USART_TIMEO
 529              		.loc 1 72 20 view .LVU121
 530              	.LBB133:
  73:platforms/chibios/drivers/serial_usart.c **** 
 531              		.loc 1 73 5 view .LVU122
  73:platforms/chibios/drivers/serial_usart.c **** 
 532              		.loc 1 73 28 is_stmt 0 view .LVU123
 533 0088 FFF7FEFF 		bl	oqWriteTimeout
 534              	.LVL17:
  85:platforms/chibios/drivers/serial_usart.c **** }
 535              		.loc 1 85 5 is_stmt 1 view .LVU124
  85:platforms/chibios/drivers/serial_usart.c **** }
 536              		.loc 1 85 5 is_stmt 0 view .LVU125
 537              	.LBE133:
 538              	.LBE135:
 539              		.loc 1 208 8 view .LVU126
 540 008c 0128     		cmp	r0, #1
 541 008e 04D0     		beq	.L4
 209:platforms/chibios/drivers/serial_usart.c ****         *trans->status = TRANSACTION_DATA_ERROR;
 542              		.loc 1 209 9 is_stmt 1 view .LVU127
 543              		.loc 1 209 15 is_stmt 0 view .LVU128
 544 0090 2D01     		lsls	r5, r5, #4
 545              	.LVL18:
 546              		.loc 1 209 24 view .LVU129
 547 0092 0222     		movs	r2, #2
 548              		.loc 1 209 15 view .LVU130
 549 0094 7359     		ldr	r3, [r6, r5]
 550              		.loc 1 209 24 view .LVU131
 551 0096 1A70     		strb	r2, [r3]
 210:platforms/chibios/drivers/serial_usart.c ****         return false;
 552              		.loc 1 210 9 is_stmt 1 view .LVU132
 553 0098 C0E7     		b	.L3
 554              	.LVL19:
 555              	.L4:
 211:platforms/chibios/drivers/serial_usart.c ****     }
 212:platforms/chibios/drivers/serial_usart.c **** 
 213:platforms/chibios/drivers/serial_usart.c ****     /* Receive transaction buffer from the master. If this transaction requires it.*/
 214:platforms/chibios/drivers/serial_usart.c ****     if (trans->initiator2target_buffer_size) {
 556              		.loc 1 214 5 view .LVU133
 557              		.loc 1 214 14 is_stmt 0 view .LVU134
 558 009a 06EB0513 		add	r3, r6, r5, lsl #4
 559 009e 2D01     		lsls	r5, r5, #4
 560              	.LVL20:
 561              		.loc 1 214 14 view .LVU135
 562 00a0 93F80480 		ldrb	r8, [r3, #4]	@ zero_extendqisi2
 563              		.loc 1 214 8 view .LVU136
 564 00a4 B8F1000F 		cmp	r8, #0
 565 00a8 17D1     		bne	.L29
 566              	.L5:
 215:platforms/chibios/drivers/serial_usart.c ****         if (!receive(split_trans_initiator2target_buffer(trans), trans->initiator2target_buffer_siz
 216:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 217:platforms/chibios/drivers/serial_usart.c ****             return false;
 218:platforms/chibios/drivers/serial_usart.c ****         }
 219:platforms/chibios/drivers/serial_usart.c ****     }
 220:platforms/chibios/drivers/serial_usart.c **** 
 221:platforms/chibios/drivers/serial_usart.c ****     /* Allow any slave processing to occur. */
 222:platforms/chibios/drivers/serial_usart.c ****     if (trans->slave_callback) {
 567              		.loc 1 222 5 is_stmt 1 view .LVU137
 568              		.loc 1 222 14 is_stmt 0 view .LVU138
 569 00aa 7019     		adds	r0, r6, r5
 570 00ac D0F80C80 		ldr	r8, [r0, #12]
 571              		.loc 1 222 8 view .LVU139
 572 00b0 B8F1000F 		cmp	r8, #0
 573 00b4 07D0     		beq	.L6
 223:platforms/chibios/drivers/serial_usart.c ****         trans->slave_callback(trans->initiator2target_buffer_size, split_trans_initiator2target_buf
 574              		.loc 1 223 9 is_stmt 1 view .LVU140
 575 00b6 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 576              		.loc 1 223 68 is_stmt 0 view .LVU141
 577 00b8 3968     		ldr	r1, [r7]
 578              		.loc 1 223 149 view .LVU142
 579 00ba 4389     		ldrh	r3, [r0, #10]
 580              		.loc 1 223 68 view .LVU143
 581 00bc C088     		ldrh	r0, [r0, #6]
 582              		.loc 1 223 9 view .LVU144
 583 00be 0B44     		add	r3, r3, r1
 584 00c0 0144     		add	r1, r1, r0
 585 00c2 1046     		mov	r0, r2
 586 00c4 C047     		blx	r8
 587              	.LVL21:
 588              	.L6:
 224:platforms/chibios/drivers/serial_usart.c ****     }
 225:platforms/chibios/drivers/serial_usart.c **** 
 226:platforms/chibios/drivers/serial_usart.c ****     /* Send transaction buffer to the master. If this transaction requires it. */
 227:platforms/chibios/drivers/serial_usart.c ****     if (trans->target2initiator_buffer_size) {
 589              		.loc 1 227 5 is_stmt 1 view .LVU145
 590              		.loc 1 227 14 is_stmt 0 view .LVU146
 591 00c6 7319     		adds	r3, r6, r5
 592 00c8 93F80880 		ldrb	r8, [r3, #8]	@ zero_extendqisi2
 593              		.loc 1 227 8 view .LVU147
 594 00cc B8F1000F 		cmp	r8, #0
 595 00d0 13D1     		bne	.L30
 596              	.L7:
 228:platforms/chibios/drivers/serial_usart.c ****         if (!send(split_trans_target2initiator_buffer(trans), trans->target2initiator_buffer_size))
 229:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 230:platforms/chibios/drivers/serial_usart.c ****             return false;
 231:platforms/chibios/drivers/serial_usart.c ****         }
 232:platforms/chibios/drivers/serial_usart.c ****     }
 233:platforms/chibios/drivers/serial_usart.c **** 
 234:platforms/chibios/drivers/serial_usart.c ****     *trans->status = TRANSACTION_ACCEPTED;
 597              		.loc 1 234 5 is_stmt 1 view .LVU148
 598              		.loc 1 234 11 is_stmt 0 view .LVU149
 599 00d2 7359     		ldr	r3, [r6, r5]
 600              		.loc 1 234 20 view .LVU150
 601 00d4 0822     		movs	r2, #8
 602 00d6 1A70     		strb	r2, [r3]
 235:platforms/chibios/drivers/serial_usart.c ****     return true;
 603              		.loc 1 235 5 is_stmt 1 view .LVU151
 604 00d8 97E7     		b	.L8
 605              	.L29:
 215:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 606              		.loc 1 215 9 view .LVU152
 607              	.LVL22:
 608              	.LBB136:
 609              	.LBI136:
  94:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdReadTimeout(serial_driver, destination, size, TIME_MS2I(SERIAL_USART_T
 610              		.loc 1 94 20 view .LVU153
 611              	.LBB137:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 612              		.loc 1 95 5 view .LVU154
 613              	.LBE137:
 614              	.LBE136:
 215:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 615              		.loc 1 215 22 is_stmt 0 view .LVU155
 616 00da B3F806C0 		ldrh	ip, [r3, #6]
 215:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 617              		.loc 1 215 14 view .LVU156
 618 00de 3968     		ldr	r1, [r7]
 619              	.LBB139:
 620              	.LBB138:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 621              		.loc 1 95 28 view .LVU157
 622 00e0 2068     		ldr	r0, [r4]
 623 00e2 3223     		movs	r3, #50
 624 00e4 4246     		mov	r2, r8
 625 00e6 6144     		add	r1, r1, ip
 626 00e8 0C30     		adds	r0, r0, #12
 627 00ea FFF7FEFF 		bl	iqReadTimeout
 628              	.LVL23:
  96:platforms/chibios/drivers/serial_usart.c **** }
 629              		.loc 1 96 5 is_stmt 1 view .LVU158
  96:platforms/chibios/drivers/serial_usart.c **** }
 630              		.loc 1 96 5 is_stmt 0 view .LVU159
 631              	.LBE138:
 632              	.LBE139:
 215:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 633              		.loc 1 215 12 view .LVU160
 634 00ee 8045     		cmp	r8, r0
 635 00f0 DBD0     		beq	.L5
 636              	.L26:
 229:platforms/chibios/drivers/serial_usart.c ****             return false;
 637              		.loc 1 229 13 is_stmt 1 view .LVU161
 229:platforms/chibios/drivers/serial_usart.c ****             return false;
 638              		.loc 1 229 19 is_stmt 0 view .LVU162
 639 00f2 7359     		ldr	r3, [r6, r5]
 229:platforms/chibios/drivers/serial_usart.c ****             return false;
 640              		.loc 1 229 28 view .LVU163
 641 00f4 0222     		movs	r2, #2
 642 00f6 1A70     		strb	r2, [r3]
 230:platforms/chibios/drivers/serial_usart.c ****         }
 643              		.loc 1 230 13 is_stmt 1 view .LVU164
 644 00f8 90E7     		b	.L3
 645              	.L30:
 228:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 646              		.loc 1 228 9 view .LVU165
 647              	.LVL24:
 648              	.LBB140:
 649              	.LBI140:
  72:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdWriteTimeout(serial_driver, source, size, TIME_MS2I(SERIAL_USART_TIMEO
 650              		.loc 1 72 20 view .LVU166
 651              	.LBB141:
  73:platforms/chibios/drivers/serial_usart.c **** 
 652              		.loc 1 73 5 view .LVU167
 653              	.LBE141:
 654              	.LBE140:
 228:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 655              		.loc 1 228 19 is_stmt 0 view .LVU168
 656 00fa B3F80AC0 		ldrh	ip, [r3, #10]
 228:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 657              		.loc 1 228 14 view .LVU169
 658 00fe 3968     		ldr	r1, [r7]
 659              	.LBB143:
 660              	.LBB142:
  73:platforms/chibios/drivers/serial_usart.c **** 
 661              		.loc 1 73 28 view .LVU170
 662 0100 2068     		ldr	r0, [r4]
 663 0102 3223     		movs	r3, #50
 664 0104 4246     		mov	r2, r8
 665 0106 6144     		add	r1, r1, ip
 666 0108 3030     		adds	r0, r0, #48
 667 010a FFF7FEFF 		bl	oqWriteTimeout
 668              	.LVL25:
  85:platforms/chibios/drivers/serial_usart.c **** }
 669              		.loc 1 85 5 is_stmt 1 view .LVU171
  85:platforms/chibios/drivers/serial_usart.c **** }
 670              		.loc 1 85 5 is_stmt 0 view .LVU172
 671              	.LBE142:
 672              	.LBE143:
 228:platforms/chibios/drivers/serial_usart.c ****             *trans->status = TRANSACTION_DATA_ERROR;
 673              		.loc 1 228 12 view .LVU173
 674 010e 8045     		cmp	r8, r0
 675 0110 DFD0     		beq	.L7
 676 0112 EEE7     		b	.L26
 677              	.L32:
 678              		.align	2
 679              	.L31:
 680 0114 00000000 		.word	.LANCHOR0
 681 0118 00000000 		.word	split_transaction_table
 682 011c 00000000 		.word	split_shmem
 683              	.LBE144:
 684              	.LBE255:
 685              		.cfi_endproc
 686              	.LFE301:
 688              		.section	.text.usart_init,"ax",%progbits
 689              		.align	1
 690              		.p2align 2,,3
 691              		.weak	usart_init
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	usart_init:
 698              	.LFB298:
 125:platforms/chibios/drivers/serial_usart.c **** #    if defined(MCU_STM32)
 699              		.loc 1 125 45 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 131:platforms/chibios/drivers/serial_usart.c ****     palSetLineMode(SERIAL_USART_RX_PIN, PAL_MODE_ALTERNATE(SERIAL_USART_RX_PAL_MODE) | PAL_OUTPUT_T
 703              		.loc 1 131 5 view .LVU175
 125:platforms/chibios/drivers/serial_usart.c **** #    if defined(MCU_STM32)
 704              		.loc 1 125 45 is_stmt 0 view .LVU176
 705 0000 08B5     		push	{r3, lr}
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 3, -8
 708              		.cfi_offset 14, -4
 131:platforms/chibios/drivers/serial_usart.c ****     palSetLineMode(SERIAL_USART_RX_PIN, PAL_MODE_ALTERNATE(SERIAL_USART_RX_PAL_MODE) | PAL_OUTPUT_T
 709              		.loc 1 131 5 view .LVU177
 710 0002 0848     		ldr	r0, .L35
 711 0004 40F29A32 		movw	r2, #922
 712 0008 4FF48061 		mov	r1, #1024
 713 000c FFF7FEFF 		bl	_pal_lld_setgroupmode
 714              	.LVL26:
 132:platforms/chibios/drivers/serial_usart.c **** #        endif
 715              		.loc 1 132 5 is_stmt 1 view .LVU178
 141:platforms/chibios/drivers/serial_usart.c **** 
 716              		.loc 1 141 1 is_stmt 0 view .LVU179
 717 0010 BDE80840 		pop	{r3, lr}
 718              		.cfi_restore 14
 719              		.cfi_restore 3
 720              		.cfi_def_cfa_offset 0
 132:platforms/chibios/drivers/serial_usart.c **** #        endif
 721              		.loc 1 132 5 view .LVU180
 722 0014 0348     		ldr	r0, .L35
 723 0016 40F29A32 		movw	r2, #922
 724 001a 4FF40061 		mov	r1, #2048
 725 001e FFF7FEBF 		b	_pal_lld_setgroupmode
 726              	.LVL27:
 727              	.L36:
 728 0022 00BF     		.align	2
 729              	.L35:
 730 0024 00040048 		.word	1207960576
 731              		.cfi_endproc
 732              	.LFE298:
 734              		.section	.text.usart_master_init,"ax",%progbits
 735              		.align	1
 736              		.p2align 2,,3
 737              		.weak	usart_master_init
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 741              		.fpu fpv4-sp-d16
 743              	usart_master_init:
 744              	.LVL28:
 745              	.LFB299:
 148:platforms/chibios/drivers/serial_usart.c ****     (void)driver;
 746              		.loc 1 148 78 is_stmt 1 view -0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 149:platforms/chibios/drivers/serial_usart.c ****     usart_init();
 750              		.loc 1 149 5 view .LVU182
 150:platforms/chibios/drivers/serial_usart.c **** }
 751              		.loc 1 150 5 view .LVU183
 148:platforms/chibios/drivers/serial_usart.c ****     (void)driver;
 752              		.loc 1 148 78 is_stmt 0 view .LVU184
 753 0000 08B5     		push	{r3, lr}
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 3, -8
 756              		.cfi_offset 14, -4
 150:platforms/chibios/drivers/serial_usart.c **** }
 757              		.loc 1 150 5 view .LVU185
 758 0002 FFF7FEFF 		bl	usart_init
 759              	.LVL29:
 151:platforms/chibios/drivers/serial_usart.c **** 
 760              		.loc 1 151 1 view .LVU186
 761 0006 08BD     		pop	{r3, pc}
 762              		.cfi_endproc
 763              	.LFE299:
 765              		.section	.text.usart_slave_init,"ax",%progbits
 766              		.align	1
 767              		.p2align 2,,3
 768              		.weak	usart_slave_init
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	usart_slave_init:
 775              	.LFB308:
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779 0000 08B5     		push	{r3, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 3, -8
 782              		.cfi_offset 14, -4
 783 0002 FFF7FEFF 		bl	usart_init
 784 0006 08BD     		pop	{r3, pc}
 785              		.cfi_endproc
 786              	.LFE308:
 788              		.section	.text.soft_serial_target_init,"ax",%progbits
 789              		.align	1
 790              		.p2align 2,,3
 791              		.global	soft_serial_target_init
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv4-sp-d16
 797              	soft_serial_target_init:
 798              	.LFB302:
 182:platforms/chibios/drivers/serial_usart.c ****     usart_slave_init(&serial_driver);
 799              		.loc 1 182 36 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 183:platforms/chibios/drivers/serial_usart.c **** 
 803              		.loc 1 183 5 view .LVU188
 182:platforms/chibios/drivers/serial_usart.c ****     usart_slave_init(&serial_driver);
 804              		.loc 1 182 36 is_stmt 0 view .LVU189
 805 0000 10B5     		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 183:platforms/chibios/drivers/serial_usart.c **** 
 809              		.loc 1 183 5 view .LVU190
 810 0002 0A4C     		ldr	r4, .L43
 182:platforms/chibios/drivers/serial_usart.c ****     usart_slave_init(&serial_driver);
 811              		.loc 1 182 36 view .LVU191
 812 0004 82B0     		sub	sp, sp, #8
 813              		.cfi_def_cfa_offset 16
 183:platforms/chibios/drivers/serial_usart.c **** 
 814              		.loc 1 183 5 view .LVU192
 815 0006 2046     		mov	r0, r4
 816 0008 FFF7FEFF 		bl	usart_slave_init
 817              	.LVL30:
 185:platforms/chibios/drivers/serial_usart.c **** 
 818              		.loc 1 185 5 is_stmt 1 view .LVU193
 819 000c 2068     		ldr	r0, [r4]
 820 000e 0849     		ldr	r1, .L43+4
 821 0010 FFF7FEFF 		bl	sdStart
 822              	.LVL31:
 188:platforms/chibios/drivers/serial_usart.c **** }
 823              		.loc 1 188 5 view .LVU194
 824 0014 0022     		movs	r2, #0
 825 0016 0092     		str	r2, [sp]
 826 0018 064B     		ldr	r3, .L43+8
 827 001a 0748     		ldr	r0, .L43+12
 828 001c FF22     		movs	r2, #255
 829 001e 4FF4A661 		mov	r1, #1328
 830 0022 FFF7FEFF 		bl	chThdCreateStatic
 831              	.LVL32:
 189:platforms/chibios/drivers/serial_usart.c **** 
 832              		.loc 1 189 1 is_stmt 0 view .LVU195
 833 0026 02B0     		add	sp, sp, #8
 834              		.cfi_def_cfa_offset 8
 835              		@ sp needed
 836 0028 10BD     		pop	{r4, pc}
 837              	.L44:
 838 002a 00BF     		.align	2
 839              	.L43:
 840 002c 00000000 		.word	.LANCHOR0
 841 0030 00000000 		.word	.LANCHOR1
 842 0034 00000000 		.word	SlaveThread
 843 0038 00000000 		.word	.LANCHOR2
 844              		.cfi_endproc
 845              	.LFE302:
 847              		.section	.text.soft_serial_initiator_init,"ax",%progbits
 848              		.align	1
 849              		.p2align 2,,3
 850              		.global	soft_serial_initiator_init
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv4-sp-d16
 856              	soft_serial_initiator_init:
 857              	.LFB304:
 236:platforms/chibios/drivers/serial_usart.c **** }
 237:platforms/chibios/drivers/serial_usart.c **** 
 238:platforms/chibios/drivers/serial_usart.c **** /**
 239:platforms/chibios/drivers/serial_usart.c ****  * @brief Master specific initializations.
 240:platforms/chibios/drivers/serial_usart.c ****  */
 241:platforms/chibios/drivers/serial_usart.c **** void soft_serial_initiator_init(void) {
 858              		.loc 1 241 39 is_stmt 1 view -0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 242:platforms/chibios/drivers/serial_usart.c ****     usart_master_init(&serial_driver);
 862              		.loc 1 242 5 view .LVU197
 241:platforms/chibios/drivers/serial_usart.c ****     usart_master_init(&serial_driver);
 863              		.loc 1 241 39 is_stmt 0 view .LVU198
 864 0000 10B5     		push	{r4, lr}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 4, -8
 867              		.cfi_offset 14, -4
 868              		.loc 1 242 5 view .LVU199
 869 0002 054C     		ldr	r4, .L47
 870 0004 2046     		mov	r0, r4
 871 0006 FFF7FEFF 		bl	usart_master_init
 872              	.LVL33:
 243:platforms/chibios/drivers/serial_usart.c **** 
 244:platforms/chibios/drivers/serial_usart.c **** #if defined(MCU_STM32) && defined(SERIAL_USART_PIN_SWAP)
 245:platforms/chibios/drivers/serial_usart.c ****     serial_config.cr2 |= USART_CR2_SWAP;  // master has swapped TX/RX pins
 246:platforms/chibios/drivers/serial_usart.c **** #endif
 247:platforms/chibios/drivers/serial_usart.c **** 
 248:platforms/chibios/drivers/serial_usart.c ****     sdStart(serial_driver, &serial_config);
 873              		.loc 1 248 5 is_stmt 1 view .LVU200
 874 000a 2068     		ldr	r0, [r4]
 875 000c 0349     		ldr	r1, .L47+4
 249:platforms/chibios/drivers/serial_usart.c **** }
 876              		.loc 1 249 1 is_stmt 0 view .LVU201
 877 000e BDE81040 		pop	{r4, lr}
 878              		.cfi_restore 14
 879              		.cfi_restore 4
 880              		.cfi_def_cfa_offset 0
 248:platforms/chibios/drivers/serial_usart.c **** }
 881              		.loc 1 248 5 view .LVU202
 882 0012 FFF7FEBF 		b	sdStart
 883              	.LVL34:
 884              	.L48:
 885 0016 00BF     		.align	2
 886              	.L47:
 887 0018 00000000 		.word	.LANCHOR0
 888 001c 00000000 		.word	.LANCHOR1
 889              		.cfi_endproc
 890              	.LFE304:
 892              		.section	.rodata.soft_serial_transaction.str1.4,"aMS",%progbits,1
 893              		.align	2
 894              	.LC0:
 895 0000 55534152 		.ascii	"USART: Illegal transaction Id.\015\012\000"
 895      543A2049 
 895      6C6C6567 
 895      616C2074 
 895      72616E73 
 896 0021 000000   		.align	2
 897              	.LC1:
 898 0024 55534152 		.ascii	"USART: Transaction not registered.\015\012\000"
 898      543A2054 
 898      72616E73 
 898      61637469 
 898      6F6E206E 
 899 0049 000000   		.align	2
 900              	.LC2:
 901 004c 55534152 		.ascii	"USART: Send Handshake failed.\015\012\000"
 901      543A2053 
 901      656E6420 
 901      48616E64 
 901      7368616B 
 902              		.align	2
 903              	.LC3:
 904 006c 55534152 		.ascii	"USART: Handshake failed.\015\012\000"
 904      543A2048 
 904      616E6473 
 904      68616B65 
 904      20666169 
 905 0087 00       		.align	2
 906              	.LC4:
 907 0088 55534152 		.ascii	"USART: Send failed.\015\012\000"
 907      543A2053 
 907      656E6420 
 907      6661696C 
 907      65642E0D 
 908 009e 0000     		.align	2
 909              	.LC5:
 910 00a0 55534152 		.ascii	"USART: Receive failed.\015\012\000"
 910      543A2052 
 910      65636569 
 910      76652066 
 910      61696C65 
 911              		.section	.text.soft_serial_transaction,"ax",%progbits
 912              		.align	1
 913              		.p2align 2,,3
 914              		.global	soft_serial_transaction
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv4-sp-d16
 920              	soft_serial_transaction:
 921              	.LVL35:
 922              	.LFB305:
 250:platforms/chibios/drivers/serial_usart.c **** 
 251:platforms/chibios/drivers/serial_usart.c **** /**
 252:platforms/chibios/drivers/serial_usart.c ****  * @brief Start transaction from the master half to the slave half.
 253:platforms/chibios/drivers/serial_usart.c ****  *
 254:platforms/chibios/drivers/serial_usart.c ****  * @param index Transaction Table index of the transaction to start.
 255:platforms/chibios/drivers/serial_usart.c ****  * @return int TRANSACTION_NO_RESPONSE in case of Timeout.
 256:platforms/chibios/drivers/serial_usart.c ****  *             TRANSACTION_TYPE_ERROR in case of invalid transaction index.
 257:platforms/chibios/drivers/serial_usart.c ****  *             TRANSACTION_END in case of success.
 258:platforms/chibios/drivers/serial_usart.c ****  */
 259:platforms/chibios/drivers/serial_usart.c **** int soft_serial_transaction(int index) {
 923              		.loc 1 259 40 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 8
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 260:platforms/chibios/drivers/serial_usart.c ****     /* Clear the receive queue, to start with a clean slate.
 261:platforms/chibios/drivers/serial_usart.c ****      * Parts of failed transactions or spurious bytes could still be in it. */
 262:platforms/chibios/drivers/serial_usart.c ****     usart_clear();
 927              		.loc 1 262 5 view .LVU204
 928              	.LBB303:
 929              	.LBI303:
  45:platforms/chibios/drivers/serial_usart.c ****     osalSysLock();
 930              		.loc 1 45 20 view .LVU205
 931              	.LBB304:
  46:platforms/chibios/drivers/serial_usart.c ****     bool volatile queue_not_empty = !iqIsEmptyI(&serial_driver->iqueue);
 932              		.loc 1 46 5 view .LVU206
 933              	.LBB305:
 934              	.LBI305:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 935              		.loc 3 573 20 view .LVU207
 936              	.LBE305:
 937              	.LBE304:
 938              	.LBE303:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 939              		.loc 3 575 3 view .LVU208
 940              	.LBB401:
 941              	.LBB382:
 942              	.LBB317:
 943              	.LBB306:
 944              	.LBI306:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 945              		.loc 4 355 20 view .LVU209
 946              	.LBE306:
 947              	.LBE317:
 948              	.LBE382:
 949              	.LBE401:
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 950              		.loc 4 357 3 view .LVU210
 951              	.LBB402:
 952              	.LBB383:
 953              	.LBB318:
 954              	.LBB314:
 955              	.LBB307:
 956              	.LBI307:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 957              		.loc 5 669 27 view .LVU211
 958              	.LBE307:
 959              	.LBE314:
 960              	.LBE318:
 961              	.LBE383:
 962              	.LBE402:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 963              		.loc 5 677 3 view .LVU212
 964              	.LBB403:
 965              	.LBB384:
 966              	.LBB319:
 967              	.LBB315:
 968              	.LBB312:
 969              	.LBB308:
 970              	.LBI308:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 971              		.loc 6 491 27 view .LVU213
 972              	.LBB309:
 973              		.loc 6 493 3 view .LVU214
 974              	.LBE309:
 975              	.LBE308:
 976              	.LBE312:
 977              	.LBE315:
 978              	.LBE319:
 979              	.LBE384:
 980              	.LBE403:
 259:platforms/chibios/drivers/serial_usart.c ****     /* Clear the receive queue, to start with a clean slate.
 981              		.loc 1 259 40 is_stmt 0 view .LVU215
 982 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 983              		.cfi_def_cfa_offset 28
 984              		.cfi_offset 4, -28
 985              		.cfi_offset 5, -24
 986              		.cfi_offset 6, -20
 987              		.cfi_offset 7, -16
 988              		.cfi_offset 8, -12
 989              		.cfi_offset 9, -8
 990              		.cfi_offset 14, -4
 991 0004 0746     		mov	r7, r0
 992 0006 83B0     		sub	sp, sp, #12
 993              		.cfi_def_cfa_offset 40
 994              	.LBB404:
 995              	.LBB385:
 996              	.LBB320:
 997              	.LBB316:
 998              	.LBB313:
 999              	.LBB311:
 1000              	.LBB310:
 1001              		.loc 6 493 3 view .LVU216
 1002 0008 2026     		movs	r6, #32
 1003              		.syntax unified
 1004              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1005 000a 86F31188 		MSR basepri, r6
 1006              	@ 0 "" 2
 1007              	.LVL36:
 1008              		.loc 6 493 3 view .LVU217
 1009              		.thumb
 1010              		.syntax unified
 1011              	.LBE310:
 1012              	.LBE311:
 1013              	.LBE313:
 1014              	.LBE316:
 1015              	.LBE320:
 1016              	.LBE385:
 1017              	.LBE404:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1018              		.loc 4 358 34 is_stmt 1 view .LVU218
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1019              		.loc 4 359 20 view .LVU219
 1020              	.LBB405:
 1021              	.LBB386:
  47:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
 1022              		.loc 1 47 5 view .LVU220
  47:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
 1023              		.loc 1 47 38 is_stmt 0 view .LVU221
 1024 000e 5A4C     		ldr	r4, .L91
 1025 0010 2368     		ldr	r3, [r4]
 1026 0012 5B69     		ldr	r3, [r3, #20]
 1027              	.LBB321:
 1028              	.LBB322:
 1029              	.LBB323:
 1030              	.LBB324:
 1031              	.LBB325:
 1032              	.LBB326:
 1033              		.loc 6 493 3 view .LVU222
 1034 0014 0025     		movs	r5, #0
 1035              	.LBE326:
 1036              	.LBE325:
 1037              	.LBE324:
 1038              	.LBE323:
 1039              	.LBE322:
 1040              	.LBE321:
  47:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
 1041              		.loc 1 47 37 view .LVU223
 1042 0016 5B1B     		subs	r3, r3, r5
 1043 0018 18BF     		it	ne
 1044 001a 0123     		movne	r3, #1
  47:platforms/chibios/drivers/serial_usart.c ****     osalSysUnlock();
 1045              		.loc 1 47 19 view .LVU224
 1046 001c 8DF80730 		strb	r3, [sp, #7]
  48:platforms/chibios/drivers/serial_usart.c **** 
 1047              		.loc 1 48 5 is_stmt 1 view .LVU225
 1048              	.LBB335:
 1049              	.LBI321:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1050              		.loc 3 584 20 view .LVU226
 1051              	.LBE335:
 1052              	.LBE386:
 1053              	.LBE405:
 1054              		.loc 3 586 3 view .LVU227
 1055              	.LBB406:
 1056              	.LBB387:
 1057              	.LBB336:
 1058              	.LBB333:
 1059              	.LBI322:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1060              		.loc 4 367 20 view .LVU228
 1061              	.LBB331:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1062              		.loc 4 369 22 view .LVU229
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1063              		.loc 4 370 33 view .LVU230
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1064              		.loc 4 376 3 view .LVU231
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1065              		.loc 4 376 3 view .LVU232
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1066              		.loc 4 376 3 view .LVU233
 1067              		.loc 4 380 3 view .LVU234
 1068              	.LBB329:
 1069              	.LBI324:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1070              		.loc 5 693 27 view .LVU235
 1071              	.LBE329:
 1072              	.LBE331:
 1073              	.LBE333:
 1074              	.LBE336:
 1075              	.LBE387:
 1076              	.LBE406:
 1077              		.loc 5 696 3 view .LVU236
 1078              	.LVL37:
 1079              	.LBB407:
 1080              	.LBB388:
 1081              	.LBB337:
 1082              	.LBB334:
 1083              	.LBB332:
 1084              	.LBB330:
 1085              	.LBB328:
 1086              	.LBI325:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1087              		.loc 6 491 27 view .LVU237
 1088              	.LBB327:
 1089              		.loc 6 493 3 view .LVU238
 1090              		.syntax unified
 1091              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1092 0020 85F31188 		MSR basepri, r5
 1093              	@ 0 "" 2
 1094              	.LVL38:
 1095              		.loc 6 493 3 is_stmt 0 view .LVU239
 1096              		.thumb
 1097              		.syntax unified
 1098              	.LBE327:
 1099              	.LBE328:
 1100              	.LBE330:
 1101              	.LBE332:
 1102              	.LBE334:
 1103              	.LBE337:
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 1104              		.loc 1 50 11 is_stmt 1 view .LVU240
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 1105              		.loc 1 50 12 is_stmt 0 view .LVU241
 1106 0024 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 1107              		.loc 1 50 11 view .LVU242
 1108 0028 C3B1     		cbz	r3, .L50
 1109              	.LVL39:
 1110              	.L51:
  51:platforms/chibios/drivers/serial_usart.c ****         /* Hard reset the input queue. */
 1111              		.loc 1 51 9 is_stmt 1 view .LVU243
 1112              	.LBB338:
 1113              	.LBI338:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1114              		.loc 3 573 20 view .LVU244
 1115              	.LBE338:
 1116              	.LBE388:
 1117              	.LBE407:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1118              		.loc 3 575 3 view .LVU245
 1119              	.LBB408:
 1120              	.LBB389:
 1121              	.LBB346:
 1122              	.LBB339:
 1123              	.LBI339:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1124              		.loc 4 355 20 view .LVU246
 1125              	.LBE339:
 1126              	.LBE346:
 1127              	.LBE389:
 1128              	.LBE408:
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1129              		.loc 4 357 3 view .LVU247
 1130              	.LBB409:
 1131              	.LBB390:
 1132              	.LBB347:
 1133              	.LBB344:
 1134              	.LBB340:
 1135              	.LBI340:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1136              		.loc 5 669 27 view .LVU248
 1137              	.LBE340:
 1138              	.LBE344:
 1139              	.LBE347:
 1140              	.LBE390:
 1141              	.LBE409:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1142              		.loc 5 677 3 view .LVU249
 1143              	.LBB410:
 1144              	.LBB391:
 1145              	.LBB348:
 1146              	.LBB345:
 1147              	.LBB343:
 1148              	.LBB341:
 1149              	.LBI341:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1150              		.loc 6 491 27 view .LVU250
 1151              	.LBB342:
 1152              		.loc 6 493 3 view .LVU251
 1153              		.syntax unified
 1154              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1155 002a 86F31188 		MSR basepri, r6
 1156              	@ 0 "" 2
 1157              	.LVL40:
 1158              		.loc 6 493 3 is_stmt 0 view .LVU252
 1159              		.thumb
 1160              		.syntax unified
 1161              	.LBE342:
 1162              	.LBE341:
 1163              	.LBE343:
 1164              	.LBE345:
 1165              	.LBE348:
 1166              	.LBE391:
 1167              	.LBE410:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1168              		.loc 4 358 34 is_stmt 1 view .LVU253
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1169              		.loc 4 359 20 view .LVU254
 1170              	.LBB411:
 1171              	.LBB392:
  53:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 1172              		.loc 1 53 9 view .LVU255
 1173 002e 2068     		ldr	r0, [r4]
 1174 0030 0C30     		adds	r0, r0, #12
 1175 0032 FFF7FEFF 		bl	iqResetI
 1176              	.LVL41:
  54:platforms/chibios/drivers/serial_usart.c ****         /* Allow pending interrupts to preempt.
 1177              		.loc 1 54 9 view .LVU256
 1178              	.LBB349:
 1179              	.LBI349:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1180              		.loc 3 584 20 view .LVU257
 1181              	.LBE349:
 1182              	.LBE392:
 1183              	.LBE411:
 1184              		.loc 3 586 3 view .LVU258
 1185              	.LBB412:
 1186              	.LBB393:
 1187              	.LBB358:
 1188              	.LBB350:
 1189              	.LBI350:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1190              		.loc 4 367 20 view .LVU259
 1191              	.LBB351:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1192              		.loc 4 369 22 view .LVU260
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1193              		.loc 4 370 33 view .LVU261
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1194              		.loc 4 376 3 view .LVU262
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1195              		.loc 4 376 3 view .LVU263
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1196              		.loc 4 376 3 view .LVU264
 1197              		.loc 4 380 3 view .LVU265
 1198              	.LBB352:
 1199              	.LBI352:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1200              		.loc 5 693 27 view .LVU266
 1201              	.LBE352:
 1202              	.LBE351:
 1203              	.LBE350:
 1204              	.LBE358:
 1205              	.LBE393:
 1206              	.LBE412:
 1207              		.loc 5 696 3 view .LVU267
 1208              	.LBB413:
 1209              	.LBB394:
 1210              	.LBB359:
 1211              	.LBB357:
 1212              	.LBB356:
 1213              	.LBB355:
 1214              	.LBB353:
 1215              	.LBI353:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1216              		.loc 6 491 27 view .LVU268
 1217              	.LBB354:
 1218              		.loc 6 493 3 view .LVU269
 1219              		.syntax unified
 1220              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1221 0036 85F31188 		MSR basepri, r5
 1222              	@ 0 "" 2
 1223              	.LVL42:
 1224              		.loc 6 493 3 is_stmt 0 view .LVU270
 1225              		.thumb
 1226              		.syntax unified
 1227              	.LBE354:
 1228              	.LBE353:
 1229              	.LBE355:
 1230              	.LBE356:
 1231              	.LBE357:
 1232              	.LBE359:
  59:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 1233              		.loc 1 59 9 is_stmt 1 view .LVU271
 1234 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  60:platforms/chibios/drivers/serial_usart.c ****         queue_not_empty = !iqIsEmptyI(&serial_driver->iqueue);
 1235              		.loc 1 60 9 view .LVU272
 1236              	.LBB360:
 1237              	.LBI360:
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1238              		.loc 3 573 20 view .LVU273
 1239              	.LBE360:
 1240              	.LBE394:
 1241              	.LBE413:
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1242              		.loc 3 575 3 view .LVU274
 1243              	.LBB414:
 1244              	.LBB395:
 1245              	.LBB368:
 1246              	.LBB361:
 1247              	.LBI361:
 355:./lib/chibios/os/rt/include/chsys.h **** 
 1248              		.loc 4 355 20 view .LVU275
 1249              	.LBE361:
 1250              	.LBE368:
 1251              	.LBE395:
 1252              	.LBE414:
 357:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1253              		.loc 4 357 3 view .LVU276
 1254              	.LBB415:
 1255              	.LBB396:
 1256              	.LBB369:
 1257              	.LBB366:
 1258              	.LBB362:
 1259              	.LBI362:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1260              		.loc 5 669 27 view .LVU277
 1261              	.LBE362:
 1262              	.LBE366:
 1263              	.LBE369:
 1264              	.LBE396:
 1265              	.LBE415:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1266              		.loc 5 677 3 view .LVU278
 1267              	.LVL43:
 1268              	.LBB416:
 1269              	.LBB397:
 1270              	.LBB370:
 1271              	.LBB367:
 1272              	.LBB365:
 1273              	.LBB363:
 1274              	.LBI363:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1275              		.loc 6 491 27 view .LVU279
 1276              	.LBB364:
 1277              		.loc 6 493 3 view .LVU280
 1278              		.syntax unified
 1279              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1280 003e 86F31188 		MSR basepri, r6
 1281              	@ 0 "" 2
 1282              	.LVL44:
 1283              		.loc 6 493 3 is_stmt 0 view .LVU281
 1284              		.thumb
 1285              		.syntax unified
 1286              	.LBE364:
 1287              	.LBE363:
 1288              	.LBE365:
 1289              	.LBE367:
 1290              	.LBE370:
 1291              	.LBE397:
 1292              	.LBE416:
 358:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1293              		.loc 4 358 34 is_stmt 1 view .LVU282
 359:./lib/chibios/os/rt/include/chsys.h **** }
 1294              		.loc 4 359 20 view .LVU283
 1295              	.LBB417:
 1296              	.LBB398:
  61:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 1297              		.loc 1 61 9 view .LVU284
  61:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 1298              		.loc 1 61 28 is_stmt 0 view .LVU285
 1299 0042 2368     		ldr	r3, [r4]
 1300 0044 5B69     		ldr	r3, [r3, #20]
  61:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 1301              		.loc 1 61 27 view .LVU286
 1302 0046 003B     		subs	r3, r3, #0
 1303 0048 18BF     		it	ne
 1304 004a 0123     		movne	r3, #1
  61:platforms/chibios/drivers/serial_usart.c ****         osalSysUnlock();
 1305              		.loc 1 61 25 view .LVU287
 1306 004c 8DF80730 		strb	r3, [sp, #7]
  62:platforms/chibios/drivers/serial_usart.c ****     }
 1307              		.loc 1 62 9 is_stmt 1 view .LVU288
 1308              	.LBB371:
 1309              	.LBI371:
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1310              		.loc 3 584 20 view .LVU289
 1311              	.LBE371:
 1312              	.LBE398:
 1313              	.LBE417:
 1314              		.loc 3 586 3 view .LVU290
 1315              	.LBB418:
 1316              	.LBB399:
 1317              	.LBB380:
 1318              	.LBB372:
 1319              	.LBI372:
 367:./lib/chibios/os/rt/include/chsys.h **** 
 1320              		.loc 4 367 20 view .LVU291
 1321              	.LBB373:
 369:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1322              		.loc 4 369 22 view .LVU292
 370:./lib/chibios/os/rt/include/chsys.h **** 
 1323              		.loc 4 370 33 view .LVU293
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1324              		.loc 4 376 3 view .LVU294
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1325              		.loc 4 376 3 view .LVU295
 376:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->hdr.pqueue.prio >= ch.rlist.pqueue.next->prio),
 1326              		.loc 4 376 3 view .LVU296
 1327              		.loc 4 380 3 view .LVU297
 1328              	.LBB374:
 1329              	.LBI374:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1330              		.loc 5 693 27 view .LVU298
 1331              	.LBE374:
 1332              	.LBE373:
 1333              	.LBE372:
 1334              	.LBE380:
 1335              	.LBE399:
 1336              	.LBE418:
 1337              		.loc 5 696 3 view .LVU299
 1338              	.LVL45:
 1339              	.LBB419:
 1340              	.LBB400:
 1341              	.LBB381:
 1342              	.LBB379:
 1343              	.LBB378:
 1344              	.LBB377:
 1345              	.LBB375:
 1346              	.LBI375:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1347              		.loc 6 491 27 view .LVU300
 1348              	.LBB376:
 1349              		.loc 6 493 3 view .LVU301
 1350              		.syntax unified
 1351              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1352 0050 85F31188 		MSR basepri, r5
 1353              	@ 0 "" 2
 1354              	.LVL46:
 1355              		.loc 6 493 3 is_stmt 0 view .LVU302
 1356              		.thumb
 1357              		.syntax unified
 1358              	.LBE376:
 1359              	.LBE375:
 1360              	.LBE377:
 1361              	.LBE378:
 1362              	.LBE379:
 1363              	.LBE381:
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 1364              		.loc 1 50 11 is_stmt 1 view .LVU303
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 1365              		.loc 1 50 12 is_stmt 0 view .LVU304
 1366 0054 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  50:platforms/chibios/drivers/serial_usart.c ****         osalSysLock();
 1367              		.loc 1 50 11 view .LVU305
 1368 0058 002B     		cmp	r3, #0
 1369 005a E6D1     		bne	.L51
 1370              	.L50:
 1371              	.LBE400:
 1372              	.LBE419:
 263:platforms/chibios/drivers/serial_usart.c ****     return initiate_transaction((uint8_t)index);
 1373              		.loc 1 263 5 is_stmt 1 view .LVU306
 1374              		.loc 1 263 12 is_stmt 0 view .LVU307
 1375 005c FFB2     		uxtb	r7, r7
 1376              	.LVL47:
 1377              	.LBB420:
 1378              	.LBB421:
 264:platforms/chibios/drivers/serial_usart.c **** }
 265:platforms/chibios/drivers/serial_usart.c **** 
 266:platforms/chibios/drivers/serial_usart.c **** /**
 267:platforms/chibios/drivers/serial_usart.c ****  * @brief Initiate transaction to slave half.
 268:platforms/chibios/drivers/serial_usart.c ****  */
 269:platforms/chibios/drivers/serial_usart.c **** static inline int initiate_transaction(uint8_t sstd_index) {
 270:platforms/chibios/drivers/serial_usart.c ****     /* Sanity check that we are actually starting a valid transaction. */
 271:platforms/chibios/drivers/serial_usart.c ****     if (sstd_index >= NUM_TOTAL_TRANSACTIONS) {
 1379              		.loc 1 271 8 view .LVU308
 1380 005e 082F     		cmp	r7, #8
 1381 0060 8DF80570 		strb	r7, [sp, #5]
 1382              	.LVL48:
 1383              		.loc 1 271 8 view .LVU309
 1384              	.LBE421:
 1385              	.LBI420:
 269:platforms/chibios/drivers/serial_usart.c ****     /* Sanity check that we are actually starting a valid transaction. */
 1386              		.loc 1 269 19 is_stmt 1 view .LVU310
 1387              	.LBB438:
 1388              		.loc 1 271 5 view .LVU311
 1389              		.loc 1 271 8 is_stmt 0 view .LVU312
 1390 0064 42D8     		bhi	.L87
 272:platforms/chibios/drivers/serial_usart.c ****         dprintln("USART: Illegal transaction Id.");
 273:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 274:platforms/chibios/drivers/serial_usart.c ****     }
 275:platforms/chibios/drivers/serial_usart.c **** 
 276:platforms/chibios/drivers/serial_usart.c ****     split_transaction_desc_t* trans = &split_transaction_table[sstd_index];
 1391              		.loc 1 276 5 is_stmt 1 view .LVU313
 1392              	.LVL49:
 277:platforms/chibios/drivers/serial_usart.c **** 
 278:platforms/chibios/drivers/serial_usart.c ****     /* Transaction is not registered. Abort. */
 279:platforms/chibios/drivers/serial_usart.c ****     if (!trans->status) {
 1393              		.loc 1 279 5 view .LVU314
 1394              		.loc 1 279 15 is_stmt 0 view .LVU315
 1395 0066 454E     		ldr	r6, .L91+4
 1396 0068 4FEA0718 		lsl	r8, r7, #4
 1397 006c 06EB0717 		add	r7, r6, r7, lsl #4
 1398              	.LVL50:
 1399              		.loc 1 279 8 view .LVU316
 1400 0070 56F80830 		ldr	r3, [r6, r8]
 1401 0074 002B     		cmp	r3, #0
 1402 0076 46D0     		beq	.L88
 280:platforms/chibios/drivers/serial_usart.c ****         dprintln("USART: Transaction not registered.");
 281:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 282:platforms/chibios/drivers/serial_usart.c ****     }
 283:platforms/chibios/drivers/serial_usart.c **** 
 284:platforms/chibios/drivers/serial_usart.c ****     /* Send transaction table index to the slave, which doubles as basic handshake token. */
 285:platforms/chibios/drivers/serial_usart.c ****     if (!send(&sstd_index, sizeof(sstd_index))) {
 1403              		.loc 1 285 5 is_stmt 1 view .LVU317
 1404              	.LVL51:
 1405              	.LBB422:
 1406              	.LBI422:
  72:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdWriteTimeout(serial_driver, source, size, TIME_MS2I(SERIAL_USART_TIMEO
 1407              		.loc 1 72 20 view .LVU318
 1408              	.LBB423:
  73:platforms/chibios/drivers/serial_usart.c **** 
 1409              		.loc 1 73 5 view .LVU319
  73:platforms/chibios/drivers/serial_usart.c **** 
 1410              		.loc 1 73 28 is_stmt 0 view .LVU320
 1411 0078 2068     		ldr	r0, [r4]
 1412 007a 3223     		movs	r3, #50
 1413 007c 3030     		adds	r0, r0, #48
 1414 007e 0122     		movs	r2, #1
 1415 0080 0DF10501 		add	r1, sp, #5
 1416              	.LVL52:
  73:platforms/chibios/drivers/serial_usart.c **** 
 1417              		.loc 1 73 28 view .LVU321
 1418 0084 FFF7FEFF 		bl	oqWriteTimeout
 1419              	.LVL53:
  85:platforms/chibios/drivers/serial_usart.c **** }
 1420              		.loc 1 85 5 is_stmt 1 view .LVU322
  85:platforms/chibios/drivers/serial_usart.c **** }
 1421              		.loc 1 85 5 is_stmt 0 view .LVU323
 1422              	.LBE423:
 1423              	.LBE422:
 1424              		.loc 1 285 8 view .LVU324
 1425 0088 0128     		cmp	r0, #1
 1426 008a 07D0     		beq	.L57
 286:platforms/chibios/drivers/serial_usart.c ****         dprintln("USART: Send Handshake failed.");
 1427              		.loc 1 286 9 is_stmt 1 view .LVU325
 1428              		.loc 1 286 9 view .LVU326
 1429 008c 3C4B     		ldr	r3, .L91+8
 1430 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1431 0090 D807     		lsls	r0, r3, #31
 1432 0092 41D4     		bmi	.L89
 1433              	.LVL54:
 1434              	.L85:
 273:platforms/chibios/drivers/serial_usart.c ****     }
 1435              		.loc 1 273 16 is_stmt 0 view .LVU327
 1436 0094 0420     		movs	r0, #4
 1437              	.L49:
 1438              	.LBE438:
 1439              	.LBE420:
 264:platforms/chibios/drivers/serial_usart.c **** 
 1440              		.loc 1 264 1 view .LVU328
 1441 0096 03B0     		add	sp, sp, #12
 1442              		.cfi_remember_state
 1443              		.cfi_def_cfa_offset 28
 1444              		@ sp needed
 1445 0098 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1446              	.LVL55:
 1447              	.L57:
 1448              		.cfi_restore_state
 1449              	.LBB442:
 1450              	.LBB439:
 287:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 288:platforms/chibios/drivers/serial_usart.c ****     }
 289:platforms/chibios/drivers/serial_usart.c **** 
 290:platforms/chibios/drivers/serial_usart.c ****     uint8_t sstd_index_shake = 0xFF;
 1451              		.loc 1 290 5 is_stmt 1 view .LVU329
 1452              	.LBB424:
 1453              	.LBB425:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 1454              		.loc 1 95 28 is_stmt 0 view .LVU330
 1455 009c 0246     		mov	r2, r0
 1456 009e 2068     		ldr	r0, [r4]
 1457              	.LBE425:
 1458              	.LBE424:
 1459              		.loc 1 290 13 view .LVU331
 1460 00a0 FF23     		movs	r3, #255
 1461 00a2 8DF80630 		strb	r3, [sp, #6]
 291:platforms/chibios/drivers/serial_usart.c **** 
 292:platforms/chibios/drivers/serial_usart.c ****     /* Which we always read back first so that we can error out correctly.
 293:platforms/chibios/drivers/serial_usart.c ****      *   - due to the half duplex limitations on return codes, we always have to read *something*.
 294:platforms/chibios/drivers/serial_usart.c ****      *   - without the read, write only transactions *always* succeed, even during the boot process
 295:platforms/chibios/drivers/serial_usart.c ****      */
 296:platforms/chibios/drivers/serial_usart.c ****     if (!receive(&sstd_index_shake, sizeof(sstd_index_shake)) || (sstd_index_shake != (sstd_index ^
 1462              		.loc 1 296 5 is_stmt 1 view .LVU332
 1463              	.LVL56:
 1464              	.LBB428:
 1465              	.LBI424:
  94:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdReadTimeout(serial_driver, destination, size, TIME_MS2I(SERIAL_USART_T
 1466              		.loc 1 94 20 view .LVU333
 1467              	.LBB426:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 1468              		.loc 1 95 5 view .LVU334
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 1469              		.loc 1 95 28 is_stmt 0 view .LVU335
 1470 00a6 0C30     		adds	r0, r0, #12
 1471 00a8 3223     		movs	r3, #50
 1472 00aa 0DF10601 		add	r1, sp, #6
 1473              	.LVL57:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 1474              		.loc 1 95 28 view .LVU336
 1475 00ae FFF7FEFF 		bl	iqReadTimeout
 1476              	.LVL58:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 1477              		.loc 1 95 28 view .LVU337
 1478              	.LBE426:
 1479              	.LBE428:
 1480              		.loc 1 296 8 view .LVU338
 1481 00b2 0128     		cmp	r0, #1
 1482              	.LBB429:
 1483              	.LBB427:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 1484              		.loc 1 95 28 view .LVU339
 1485 00b4 0546     		mov	r5, r0
 1486              	.LVL59:
  96:platforms/chibios/drivers/serial_usart.c **** }
 1487              		.loc 1 96 5 is_stmt 1 view .LVU340
  96:platforms/chibios/drivers/serial_usart.c **** }
 1488              		.loc 1 96 5 is_stmt 0 view .LVU341
 1489              	.LBE427:
 1490              	.LBE429:
 1491              		.loc 1 296 8 view .LVU342
 1492 00b6 11D1     		bne	.L58
 1493              		.loc 1 296 84 view .LVU343
 1494 00b8 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1495              		.loc 1 296 63 view .LVU344
 1496 00bc 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 1497 00c0 83F00703 		eor	r3, r3, #7
 1498 00c4 9A42     		cmp	r2, r3
 1499 00c6 09D1     		bne	.L58
 297:platforms/chibios/drivers/serial_usart.c ****         dprintln("USART: Handshake failed.");
 298:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_NO_RESPONSE;
 299:platforms/chibios/drivers/serial_usart.c ****     }
 300:platforms/chibios/drivers/serial_usart.c **** 
 301:platforms/chibios/drivers/serial_usart.c ****     /* Send transaction buffer to the slave. If this transaction requires it. */
 302:platforms/chibios/drivers/serial_usart.c ****     if (trans->initiator2target_buffer_size) {
 1500              		.loc 1 302 5 is_stmt 1 view .LVU345
 1501              		.loc 1 302 14 is_stmt 0 view .LVU346
 1502 00c8 97F80490 		ldrb	r9, [r7, #4]	@ zero_extendqisi2
 1503              		.loc 1 302 8 view .LVU347
 1504 00cc B9F1000F 		cmp	r9, #0
 1505 00d0 3DD1     		bne	.L90
 1506              	.L61:
 303:platforms/chibios/drivers/serial_usart.c ****         if (!send(split_trans_initiator2target_buffer(trans), trans->initiator2target_buffer_size))
 304:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Send failed.");
 305:platforms/chibios/drivers/serial_usart.c ****             return TRANSACTION_NO_RESPONSE;
 306:platforms/chibios/drivers/serial_usart.c ****         }
 307:platforms/chibios/drivers/serial_usart.c ****     }
 308:platforms/chibios/drivers/serial_usart.c **** 
 309:platforms/chibios/drivers/serial_usart.c ****     /* Receive transaction buffer from the slave. If this transaction requires it. */
 310:platforms/chibios/drivers/serial_usart.c ****     if (trans->target2initiator_buffer_size) {
 1507              		.loc 1 310 5 is_stmt 1 view .LVU348
 1508              		.loc 1 310 14 is_stmt 0 view .LVU349
 1509 00d2 4644     		add	r6, r6, r8
 1510 00d4 357A     		ldrb	r5, [r6, #8]	@ zero_extendqisi2
 1511              		.loc 1 310 8 view .LVU350
 1512 00d6 35BB     		cbnz	r5, .L63
 1513              	.L64:
 311:platforms/chibios/drivers/serial_usart.c ****         if (!receive(split_trans_target2initiator_buffer(trans), trans->target2initiator_buffer_siz
 312:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Receive failed.");
 313:platforms/chibios/drivers/serial_usart.c ****             return TRANSACTION_NO_RESPONSE;
 314:platforms/chibios/drivers/serial_usart.c ****         }
 315:platforms/chibios/drivers/serial_usart.c ****     }
 316:platforms/chibios/drivers/serial_usart.c **** 
 317:platforms/chibios/drivers/serial_usart.c ****     return TRANSACTION_END;
 1514              		.loc 1 317 12 view .LVU351
 1515 00d8 0020     		movs	r0, #0
 1516 00da DCE7     		b	.L49
 1517              	.L58:
 297:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_NO_RESPONSE;
 1518              		.loc 1 297 9 is_stmt 1 view .LVU352
 297:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_NO_RESPONSE;
 1519              		.loc 1 297 9 view .LVU353
 1520 00dc 284B     		ldr	r3, .L91+8
 1521 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1522 00e0 D907     		lsls	r1, r3, #31
 1523 00e2 0BD4     		bmi	.L60
 1524              	.L86:
 313:platforms/chibios/drivers/serial_usart.c ****         }
 1525              		.loc 1 313 20 is_stmt 0 view .LVU354
 1526 00e4 0120     		movs	r0, #1
 1527              	.LBE439:
 1528              	.LBE442:
 264:platforms/chibios/drivers/serial_usart.c **** 
 1529              		.loc 1 264 1 view .LVU355
 1530 00e6 03B0     		add	sp, sp, #12
 1531              		.cfi_remember_state
 1532              		.cfi_def_cfa_offset 28
 1533              		@ sp needed
 1534 00e8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1535              	.LVL60:
 1536              	.L87:
 1537              		.cfi_restore_state
 1538              	.LBB443:
 1539              	.LBB440:
 272:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 1540              		.loc 1 272 9 is_stmt 1 view .LVU356
 272:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 1541              		.loc 1 272 9 view .LVU357
 1542 00ec 244B     		ldr	r3, .L91+8
 1543 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1544 00f0 DD07     		lsls	r5, r3, #31
 1545 00f2 CFD5     		bpl	.L85
 272:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 1546              		.loc 1 272 9 view .LVU358
 1547 00f4 2348     		ldr	r0, .L91+12
 1548 00f6 FFF7FEFF 		bl	printf_
 1549              	.LVL61:
 272:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 1550              		.loc 1 272 9 is_stmt 0 view .LVU359
 1551 00fa CBE7     		b	.L85
 1552              	.LVL62:
 1553              	.L60:
 297:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_NO_RESPONSE;
 1554              		.loc 1 297 9 is_stmt 1 view .LVU360
 1555 00fc 2248     		ldr	r0, .L91+16
 1556 00fe FFF7FEFF 		bl	printf_
 1557              	.LVL63:
 298:platforms/chibios/drivers/serial_usart.c ****     }
 1558              		.loc 1 298 16 is_stmt 0 view .LVU361
 1559 0102 0120     		movs	r0, #1
 1560 0104 C7E7     		b	.L49
 1561              	.LVL64:
 1562              	.L88:
 280:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 1563              		.loc 1 280 9 is_stmt 1 view .LVU362
 280:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 1564              		.loc 1 280 9 view .LVU363
 1565 0106 1E4B     		ldr	r3, .L91+8
 1566 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1567 010a DC07     		lsls	r4, r3, #31
 1568 010c C2D5     		bpl	.L85
 280:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 1569              		.loc 1 280 9 view .LVU364
 1570 010e 1F48     		ldr	r0, .L91+20
 1571 0110 FFF7FEFF 		bl	printf_
 1572              	.LVL65:
 281:platforms/chibios/drivers/serial_usart.c ****     }
 1573              		.loc 1 281 16 is_stmt 0 view .LVU365
 1574 0114 0420     		movs	r0, #4
 1575 0116 BEE7     		b	.L49
 1576              	.L89:
 286:platforms/chibios/drivers/serial_usart.c ****         return TRANSACTION_TYPE_ERROR;
 1577              		.loc 1 286 9 is_stmt 1 view .LVU366
 1578 0118 1D48     		ldr	r0, .L91+24
 1579 011a FFF7FEFF 		bl	printf_
 1580              	.LVL66:
 287:platforms/chibios/drivers/serial_usart.c ****     }
 1581              		.loc 1 287 16 is_stmt 0 view .LVU367
 1582 011e 0420     		movs	r0, #4
 1583              	.LBE440:
 1584              	.LBE443:
 264:platforms/chibios/drivers/serial_usart.c **** 
 1585              		.loc 1 264 1 view .LVU368
 1586 0120 03B0     		add	sp, sp, #12
 1587              		.cfi_remember_state
 1588              		.cfi_def_cfa_offset 28
 1589              		@ sp needed
 1590 0122 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1591              	.LVL67:
 1592              	.L63:
 1593              		.cfi_restore_state
 1594              	.LBB444:
 1595              	.LBB441:
 311:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Receive failed.");
 1596              		.loc 1 311 9 is_stmt 1 view .LVU369
 1597              	.LBB430:
 1598              	.LBI430:
  94:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdReadTimeout(serial_driver, destination, size, TIME_MS2I(SERIAL_USART_T
 1599              		.loc 1 94 20 view .LVU370
 1600              	.LBB431:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 1601              		.loc 1 95 5 view .LVU371
 1602              	.LBE431:
 1603              	.LBE430:
 311:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Receive failed.");
 1604              		.loc 1 311 22 is_stmt 0 view .LVU372
 1605 0126 1B4A     		ldr	r2, .L91+28
 1606 0128 7389     		ldrh	r3, [r6, #10]
 311:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Receive failed.");
 1607              		.loc 1 311 14 view .LVU373
 1608 012a 1168     		ldr	r1, [r2]
 1609              	.LBB433:
 1610              	.LBB432:
  95:platforms/chibios/drivers/serial_usart.c ****     return success;
 1611              		.loc 1 95 28 view .LVU374
 1612 012c 2068     		ldr	r0, [r4]
 1613 012e 1944     		add	r1, r1, r3
 1614 0130 2A46     		mov	r2, r5
 1615 0132 3223     		movs	r3, #50
 1616 0134 0C30     		adds	r0, r0, #12
 1617 0136 FFF7FEFF 		bl	iqReadTimeout
 1618              	.LVL68:
  96:platforms/chibios/drivers/serial_usart.c **** }
 1619              		.loc 1 96 5 is_stmt 1 view .LVU375
  96:platforms/chibios/drivers/serial_usart.c **** }
 1620              		.loc 1 96 5 is_stmt 0 view .LVU376
 1621              	.LBE432:
 1622              	.LBE433:
 311:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Receive failed.");
 1623              		.loc 1 311 12 view .LVU377
 1624 013a 8542     		cmp	r5, r0
 1625 013c CCD0     		beq	.L64
 312:platforms/chibios/drivers/serial_usart.c ****             return TRANSACTION_NO_RESPONSE;
 1626              		.loc 1 312 13 is_stmt 1 view .LVU378
 312:platforms/chibios/drivers/serial_usart.c ****             return TRANSACTION_NO_RESPONSE;
 1627              		.loc 1 312 13 view .LVU379
 1628 013e 104B     		ldr	r3, .L91+8
 1629 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1630 0142 DB07     		lsls	r3, r3, #31
 1631 0144 CED5     		bpl	.L86
 312:platforms/chibios/drivers/serial_usart.c ****             return TRANSACTION_NO_RESPONSE;
 1632              		.loc 1 312 13 view .LVU380
 1633 0146 1448     		ldr	r0, .L91+32
 1634 0148 FFF7FEFF 		bl	printf_
 1635              	.LVL69:
 1636 014c CAE7     		b	.L86
 1637              	.L90:
 303:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Send failed.");
 1638              		.loc 1 303 9 view .LVU381
 1639              	.LVL70:
 1640              	.LBB434:
 1641              	.LBI434:
  72:platforms/chibios/drivers/serial_usart.c ****     bool success = (size_t)sdWriteTimeout(serial_driver, source, size, TIME_MS2I(SERIAL_USART_TIMEO
 1642              		.loc 1 72 20 view .LVU382
 1643              	.LBB435:
  73:platforms/chibios/drivers/serial_usart.c **** 
 1644              		.loc 1 73 5 view .LVU383
 1645              	.LBE435:
 1646              	.LBE434:
 303:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Send failed.");
 1647              		.loc 1 303 19 is_stmt 0 view .LVU384
 1648 014e 1149     		ldr	r1, .L91+28
 1649 0150 FB88     		ldrh	r3, [r7, #6]
 303:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Send failed.");
 1650              		.loc 1 303 14 view .LVU385
 1651 0152 0968     		ldr	r1, [r1]
 1652              	.LBB437:
 1653              	.LBB436:
  73:platforms/chibios/drivers/serial_usart.c **** 
 1654              		.loc 1 73 28 view .LVU386
 1655 0154 2068     		ldr	r0, [r4]
 1656 0156 1944     		add	r1, r1, r3
 1657 0158 3030     		adds	r0, r0, #48
 1658 015a 3223     		movs	r3, #50
 1659 015c 4A46     		mov	r2, r9
 1660 015e FFF7FEFF 		bl	oqWriteTimeout
 1661              	.LVL71:
  85:platforms/chibios/drivers/serial_usart.c **** }
 1662              		.loc 1 85 5 is_stmt 1 view .LVU387
  85:platforms/chibios/drivers/serial_usart.c **** }
 1663              		.loc 1 85 5 is_stmt 0 view .LVU388
 1664              	.LBE436:
 1665              	.LBE437:
 303:platforms/chibios/drivers/serial_usart.c ****             dprintln("USART: Send failed.");
 1666              		.loc 1 303 12 view .LVU389
 1667 0162 8145     		cmp	r9, r0
 1668 0164 B5D0     		beq	.L61
 304:platforms/chibios/drivers/serial_usart.c ****             return TRANSACTION_NO_RESPONSE;
 1669              		.loc 1 304 13 is_stmt 1 view .LVU390
 304:platforms/chibios/drivers/serial_usart.c ****             return TRANSACTION_NO_RESPONSE;
 1670              		.loc 1 304 13 view .LVU391
 1671 0166 064B     		ldr	r3, .L91+8
 1672 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1673 016a DA07     		lsls	r2, r3, #31
 1674 016c BAD5     		bpl	.L86
 304:platforms/chibios/drivers/serial_usart.c ****             return TRANSACTION_NO_RESPONSE;
 1675              		.loc 1 304 13 view .LVU392
 1676 016e 0B48     		ldr	r0, .L91+36
 1677 0170 FFF7FEFF 		bl	printf_
 1678              	.LVL72:
 305:platforms/chibios/drivers/serial_usart.c ****         }
 1679              		.loc 1 305 20 is_stmt 0 view .LVU393
 1680 0174 2846     		mov	r0, r5
 1681 0176 8EE7     		b	.L49
 1682              	.L92:
 1683              		.align	2
 1684              	.L91:
 1685 0178 00000000 		.word	.LANCHOR0
 1686 017c 00000000 		.word	split_transaction_table
 1687 0180 00000000 		.word	debug_config
 1688 0184 00000000 		.word	.LC0
 1689 0188 6C000000 		.word	.LC3
 1690 018c 24000000 		.word	.LC1
 1691 0190 4C000000 		.word	.LC2
 1692 0194 00000000 		.word	split_shmem
 1693 0198 A0000000 		.word	.LC5
 1694 019c 88000000 		.word	.LC4
 1695              	.LBE441:
 1696              	.LBE444:
 1697              		.cfi_endproc
 1698              	.LFE305:
 1700              		.section	.bss.waSlaveThread,"aw",%nobits
 1701              		.align	3
 1702              		.set	.LANCHOR2,. + 0
 1705              	waSlaveThread:
 1706 0000 00000000 		.space	1328
 1706      00000000 
 1706      00000000 
 1706      00000000 
 1706      00000000 
 1707              		.section	.data.serial_config,"aw"
 1708              		.align	2
 1709              		.set	.LANCHOR1,. + 0
 1712              	serial_config:
 1713 0000 10552200 		.word	2250000
 1714 0004 00160000 		.word	5632
 1715 0008 00000000 		.word	0
 1716 000c 00000000 		.word	0
 1717              		.section	.data.serial_driver,"aw"
 1718              		.align	2
 1719              		.set	.LANCHOR0,. + 0
 1722              	serial_driver:
 1723 0000 00000000 		.word	SD3
 1724              		.text
 1725              	.Letext0:
 1726              		.file 7 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1727              		.file 8 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1728              		.file 9 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1729              		.file 10 "./lib/chibios/os/rt/include/chsystypes.h"
 1730              		.file 11 "./lib/chibios/os/rt/include/chschd.h"
 1731              		.file 12 "./lib/chibios/os/rt/include/chlists.h"
 1732              		.file 13 "./lib/chibios/os/rt/include/chtime.h"
 1733              		.file 14 "./lib/chibios/os/common/ext/ST/STM32F3xx/stm32f303xc.h"
 1734              		.file 15 "./lib/chibios/os/common/ports/ARMCMx/chcore.h"
 1735              		.file 16 "./lib/chibios/os/rt/include/chsem.h"
 1736              		.file 17 "./lib/chibios/os/rt/include/chmtx.h"
 1737              		.file 18 "./lib/chibios/os/rt/include/chevents.h"
 1738              		.file 19 "./lib/chibios/os/hal/include/hal_queues.h"
 1739              		.file 20 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 1740              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 1741              		.file 22 "./lib/chibios/os/hal/include/hal_serial.h"
 1742              		.file 23 "./lib/chibios/os/hal/ports/STM32/LLD/USARTv2/hal_serial_lld.h"
 1743              		.file 24 "quantum/matrix.h"
 1744              		.file 25 "quantum/logging/debug.h"
 1745              		.file 26 "quantum/sequencer/sequencer.h"
 1746              		.file 27 "quantum/color.h"
 1747              		.file 28 "quantum/rgb_matrix/rgb_matrix_types.h"
 1748              		.file 29 "quantum/action_layer.h"
 1749              		.file 30 "tmk_core/common/chibios/gpio.h"
 1750              		.file 31 "quantum/split_common/transport.h"
 1751              		.file 32 "quantum/split_common/transactions.h"
 1752              		.file 33 "lib/printf/printf.h"
 1753              		.file 34 "./lib/chibios/os/rt/include/chthreads.h"
 1754              		.file 35 "quantum/split_common/transaction_id_define.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 serial_usart.c
     /tmp/cclZsB3L.s:16     .text.SlaveThread:0000000000000000 $t
     /tmp/cclZsB3L.s:24     .text.SlaveThread:0000000000000000 SlaveThread
     /tmp/cclZsB3L.s:680    .text.SlaveThread:0000000000000114 $d
     /tmp/cclZsB3L.s:689    .text.usart_init:0000000000000000 $t
     /tmp/cclZsB3L.s:697    .text.usart_init:0000000000000000 usart_init
     /tmp/cclZsB3L.s:730    .text.usart_init:0000000000000024 $d
     /tmp/cclZsB3L.s:735    .text.usart_master_init:0000000000000000 $t
     /tmp/cclZsB3L.s:743    .text.usart_master_init:0000000000000000 usart_master_init
     /tmp/cclZsB3L.s:766    .text.usart_slave_init:0000000000000000 $t
     /tmp/cclZsB3L.s:774    .text.usart_slave_init:0000000000000000 usart_slave_init
     /tmp/cclZsB3L.s:789    .text.soft_serial_target_init:0000000000000000 $t
     /tmp/cclZsB3L.s:797    .text.soft_serial_target_init:0000000000000000 soft_serial_target_init
     /tmp/cclZsB3L.s:840    .text.soft_serial_target_init:000000000000002c $d
     /tmp/cclZsB3L.s:848    .text.soft_serial_initiator_init:0000000000000000 $t
     /tmp/cclZsB3L.s:856    .text.soft_serial_initiator_init:0000000000000000 soft_serial_initiator_init
     /tmp/cclZsB3L.s:887    .text.soft_serial_initiator_init:0000000000000018 $d
     /tmp/cclZsB3L.s:893    .rodata.soft_serial_transaction.str1.4:0000000000000000 $d
     /tmp/cclZsB3L.s:912    .text.soft_serial_transaction:0000000000000000 $t
     /tmp/cclZsB3L.s:920    .text.soft_serial_transaction:0000000000000000 soft_serial_transaction
     /tmp/cclZsB3L.s:1685   .text.soft_serial_transaction:0000000000000178 $d
     /tmp/cclZsB3L.s:1701   .bss.waSlaveThread:0000000000000000 $d
     /tmp/cclZsB3L.s:1705   .bss.waSlaveThread:0000000000000000 waSlaveThread
     /tmp/cclZsB3L.s:1708   .data.serial_config:0000000000000000 $d
     /tmp/cclZsB3L.s:1712   .data.serial_config:0000000000000000 serial_config
     /tmp/cclZsB3L.s:1718   .data.serial_driver:0000000000000000 $d
     /tmp/cclZsB3L.s:1722   .data.serial_driver:0000000000000000 serial_driver

UNDEFINED SYMBOLS
iqGetTimeout
iqResetI
oqWriteTimeout
iqReadTimeout
split_transaction_table
split_shmem
_pal_lld_setgroupmode
sdStart
chThdCreateStatic
printf_
debug_config
SD3
